{"version":3,"sources":["../node_modules/canvg/dist/browser/canvg.min.js","../node_modules/rgbcolor/index.js","../node_modules/stackblur-canvas/src/stackblur.js"],"names":["module","exports","m","d","t","hasOwnProperty","default","u","p","document","createElement","window","DOMParser","f","c","e","i","n","s","A","opts","FRAMERATE","MAX_VIRTUAL_PIXELS","rootEmSize","emSize","log","console","init","UniqueId","Definitions","Styles","StylesSpecificity","Animations","Images","ctx","ViewPort","this","viewPorts","Clear","SetCurrent","push","width","height","RemoveCurrent","pop","Current","length","ComputeSize","Math","sqrt","pow","ImagesLoaded","loaded","trim","replace","compressSpaces","ajax","XMLHttpRequest","ActiveXObject","open","send","responseText","parseXml","Windows","Data","Xml","Dom","XmlDocument","XmlLoadSettings","prohibitDtd","loadXml","async","loadXML","xmldom","parseFromString","Property","name","value","prototype","getValue","hasValue","numValue","parseFloat","match","valueOrDefault","numValueOrDefault","addOpacity","ok","r","g","b","getDefinition","isUrlDefinition","indexOf","getFillStyleDefinition","createGradient","createPattern","getHrefAttribute","attribute","getDPI","getREM","getEM","getUnits","isPixels","toPixels","toMilliseconds","toRadians","PI","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","toTextBaseline","Font","Variants","Weights","CreateFont","a","Parse","font","fontFamily","fontSize","fontStyle","fontWeight","fontVariant","toString","join","split","ToNumberArray","Point","x","y","angleTo","atan2","applyTransform","CreatePoint","CreatePath","BoundingBox","x1","Number","NaN","y1","x2","y2","addPoint","isNaN","addX","addY","addBoundingBox","addQuadraticCurve","o","l","h","addBezierCurve","v","isPointInBox","Transform","Type","translate","apply","unapply","applyToPoint","rotate","angle","cx","cy","cos","sin","scale","matrix","transform","SkewBase","base","skewX","tan","skewY","transforms","type","AspectRatio","min","max","Element","EmptyProperty","ElementBase","attributes","styles","stylesSpecificity","children","style","parent","render","save","setContext","renderChildren","clearContext","restore","addChild","CreateElement","addStylesFromStyleDefinition","RegExp","nodeType","nodeName","test","toLowerCase","childNodes","captureTextNodes","text","textContent","tspan","RenderedElementBase","calculateOpacity","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","paintOrder","setLineDash","webkitLineDash","mozDash","lineDashOffset","webkitLineDashOffset","mozDashOffset","globalAlpha","PathElementBase","path","beginPath","Mouse","checkPath","fill","stroke","getMarkers","getBoundingBox","svg","baseClearContext","baseSetContext","canvas","getComputedStyle","getPropertyValue","root","moveTo","lineTo","closePath","clip","rect","bezierCurveTo","circle","arc","ellipse","line","getPoints","polyline","points","polygon","basePath","PathParser","tokens","reset","command","previousCommand","start","control","current","angles","isEnd","isCommandOrEnd","isRelativeCommand","getToken","getScalar","nextCommand","getPoint","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","addMarker","addMarkerAngle","getMarkerPoints","getMarkerAngles","quadraticCurveTo","P","E","acos","w","B","C","T","V","M","S","k","D","pattern","viewBox","getContext","marker","baseRender","refX","refY","defs","GradientBase","stops","getGradient","gradientUnits","attributesToInherit","inheritStopContainer","color","addColorStop","offset","linearGradient","createLinearGradient","radialGradient","createRadialGradient","stop","AnimateBase","duration","begin","maxDuration","getProperty","initialValue","initialUnits","removed","calcValue","update","frozen","animationFrozen","animationFrozenValue","from","to","values","progress","floor","ceil","animate","animateColor","parseInt","animateTransform","horizAdvX","isRTL","isArabic","fontFace","missingGlyph","glyphs","arabicForm","unicode","fontface","ascent","descent","unitsPerEm","missingglyph","glyph","textBaseline","initializeCoordinates","getAnchorDelta","getChildBoundingBox","renderChild","measureTextRecursive","adjustChildCoordinates","measureText","TextElementBase","getGlyph","strokeText","getText","fillText","reverse","tref","hasText","data","baseRenderChildren","checkBoundingBox","onclick","onmousemove","cursor","image","img","useCORS","crossOrigin","onload","onerror","src","drawSvg","complete","drawImage","symbol","substr","getElementsByTagName","use","elementTransform","preserveAspectRatio","overflow","mask","globalCompositeOperation","fillRect","clipPath","CanvasRenderingContext2D","call","filter","extraFilterDistance","feMorphology","feComposite","feColorMatrix","_i","getImageData","clearRect","putImageData","feGaussianBlur","blurRadius","canvasRGBA","id","display","body","appendChild","removeChild","title","desc","MISSING","load","loadXmlDoc","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","ignoreMouse","clientX","event","clientY","documentElement","parentNode","clientWidth","clientHeight","ignoreDimensions","offsetX","offsetY","scaleWidth","scaleHeight","ignoreClear","renderCallback","intervalID","setInterval","hasEvents","ignoreAnimation","forceRedraw","runEvents","clearInterval","events","run","eventElements","isPointInPath","getElementById","querySelectorAll","insertBefore","innerHTML","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","jQuery","Zepto","$","is","Sizzle","matchesSelector","_t","__webpack_require__","color_string","alpha","charAt","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","processor","exec","channels","toRGB","toRGBA","toHex","getHelpXML","examples","Array","j","sc","xml","setAttribute","list_item","list_color","RGBColor","example_div","cssText","createTextNode","list_item_value","mul_table","shg_table","getImageDataFromCanvas","top_x","top_y","HTMLCanvasElement","imageData","context","Error","processCanvasRGBA","radius","processImageDataRGBA","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackEnd","stackIn","stackOut","mul_sum","shg_sum","processCanvasRGB","processImageDataRGB","blurAlphaChannel","HTMLImageElement","naturalWidth","naturalHeight","canvasRGB","imageDataRGBA","imageDataRGB"],"mappings":"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","file":"static/js/5.27092055.chunk.js","sourcesContent":["!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e(require(\"rgbcolor\"), require(\"stackblur-canvas\")) : \"function\" == typeof define && define.amd ? define([\"rgbcolor\", \"stackblur-canvas\"], e) : t.canvg = e(t.RGBColor, t.StackBlur);\n}(this, function (m, d) {\n  \"use strict\";\n\n  var t;\n  return m = m && m.hasOwnProperty(\"default\") ? m.default : m, d = d && d.hasOwnProperty(\"default\") ? d.default : d, function (t) {\n    var u;\n    t.exports;\n    (u = window).DOMParser = window.DOMParser;\n\n    function p() {\n      return document.createElement(\"canvas\");\n    }\n\n    var f,\n        c = function c(t, e, i) {\n      if (null != t || null != e || null != i) {\n        var n = function (s) {\n          var A = {\n            opts: s,\n            FRAMERATE: 30,\n            MAX_VIRTUAL_PIXELS: 3e4,\n            rootEmSize: 12,\n            emSize: 12,\n            log: function log(t) {}\n          };\n          1 == A.opts.log && \"undefined\" != typeof console && (A.log = function (t) {\n            console.log(t);\n          });\n          A.init = function (t) {\n            var e = 0;\n            A.UniqueId = function () {\n              return \"canvg\" + ++e;\n            }, A.Definitions = {}, A.Styles = {}, A.StylesSpecificity = {}, A.Animations = [], A.Images = [], A.ctx = t, A.ViewPort = new function () {\n              this.viewPorts = [], this.Clear = function () {\n                this.viewPorts = [];\n              }, this.SetCurrent = function (t, e) {\n                this.viewPorts.push({\n                  width: t,\n                  height: e\n                });\n              }, this.RemoveCurrent = function () {\n                this.viewPorts.pop();\n              }, this.Current = function () {\n                return this.viewPorts[this.viewPorts.length - 1];\n              }, this.width = function () {\n                return this.Current().width;\n              }, this.height = function () {\n                return this.Current().height;\n              }, this.ComputeSize = function (t) {\n                return null != t && \"number\" == typeof t ? t : \"x\" == t ? this.width() : \"y\" == t ? this.height() : Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2);\n              };\n            }();\n          }, A.init(), A.ImagesLoaded = function () {\n            for (var t = 0; t < A.Images.length; t++) {\n              if (!A.Images[t].loaded) return !1;\n            }\n\n            return !0;\n          }, A.trim = function (t) {\n            return t.replace(/^\\s+|\\s+$/g, \"\");\n          }, A.compressSpaces = function (t) {\n            return t.replace(/(?!\\u3000)\\s+/gm, \" \");\n          }, A.ajax = function (t) {\n            var e;\n            return (e = u.XMLHttpRequest ? new u.XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\")) ? (e.open(\"GET\", t, !1), e.send(null), e.responseText) : null;\n          }, A.parseXml = function (e) {\n            if (\"undefined\" != typeof Windows && void 0 !== Windows.Data && void 0 !== Windows.Data.Xml) {\n              var t = new Windows.Data.Xml.Dom.XmlDocument(),\n                  i = new Windows.Data.Xml.Dom.XmlLoadSettings();\n              return i.prohibitDtd = !1, t.loadXml(e, i), t;\n            }\n\n            if (!u.DOMParser) {\n              e = e.replace(/<!DOCTYPE svg[^>]*>/, \"\");\n              var t = new ActiveXObject(\"Microsoft.XMLDOM\");\n              return t.async = \"false\", t.loadXML(e), t;\n            }\n\n            try {\n              var n = s.xmldom ? new u.DOMParser(s.xmldom) : new u.DOMParser();\n              return n.parseFromString(e, \"image/svg+xml\");\n            } catch (t) {\n              return (n = s.xmldom ? new u.DOMParser(s.xmldom) : new u.DOMParser()).parseFromString(e, \"text/xml\");\n            }\n          }, A.Property = function (t, e) {\n            this.name = t, this.value = e;\n          }, A.Property.prototype.getValue = function () {\n            return this.value;\n          }, A.Property.prototype.hasValue = function () {\n            return null != this.value && \"\" !== this.value;\n          }, A.Property.prototype.numValue = function () {\n            if (!this.hasValue()) return 0;\n            var t = parseFloat(this.value);\n            return (this.value + \"\").match(/%$/) && (t /= 100), t;\n          }, A.Property.prototype.valueOrDefault = function (t) {\n            return this.hasValue() ? this.value : t;\n          }, A.Property.prototype.numValueOrDefault = function (t) {\n            return this.hasValue() ? this.numValue() : t;\n          }, A.Property.prototype.addOpacity = function (t) {\n            var e = this.value;\n\n            if (null != t.value && \"\" != t.value && \"string\" == typeof this.value) {\n              var i = new m(this.value);\n              i.ok && (e = \"rgba(\" + i.r + \", \" + i.g + \", \" + i.b + \", \" + t.numValue() + \")\");\n            }\n\n            return new A.Property(this.name, e);\n          }, A.Property.prototype.getDefinition = function () {\n            var t = this.value.match(/#([^\\)'\"]+)/);\n            return t && (t = t[1]), t || (t = this.value), A.Definitions[t];\n          }, A.Property.prototype.isUrlDefinition = function () {\n            return 0 == this.value.indexOf(\"url(\");\n          }, A.Property.prototype.getFillStyleDefinition = function (t, e) {\n            var i = this.getDefinition();\n            if (null != i && i.createGradient) return i.createGradient(A.ctx, t, e);\n\n            if (null != i && i.createPattern) {\n              if (i.getHrefAttribute().hasValue()) {\n                var n = i.attribute(\"patternTransform\");\n                i = i.getHrefAttribute().getDefinition(), n.hasValue() && (i.attribute(\"patternTransform\", !0).value = n.value);\n              }\n\n              return i.createPattern(A.ctx, t);\n            }\n\n            return null;\n          }, A.Property.prototype.getDPI = function (t) {\n            return 96;\n          }, A.Property.prototype.getREM = function (t) {\n            return A.rootEmSize;\n          }, A.Property.prototype.getEM = function (t) {\n            return A.emSize;\n          }, A.Property.prototype.getUnits = function () {\n            var t = this.value + \"\";\n            return t.replace(/[0-9\\.\\-]/g, \"\");\n          }, A.Property.prototype.isPixels = function () {\n            if (!this.hasValue()) return !1;\n            var t = this.value + \"\";\n            return !!t.match(/px$/) || !!t.match(/^[0-9]+$/);\n          }, A.Property.prototype.toPixels = function (t, e) {\n            if (!this.hasValue()) return 0;\n            var i = this.value + \"\";\n            if (i.match(/rem$/)) return this.numValue() * this.getREM(t);\n            if (i.match(/em$/)) return this.numValue() * this.getEM(t);\n            if (i.match(/ex$/)) return this.numValue() * this.getEM(t) / 2;\n            if (i.match(/px$/)) return this.numValue();\n            if (i.match(/pt$/)) return this.numValue() * this.getDPI(t) * (1 / 72);\n            if (i.match(/pc$/)) return 15 * this.numValue();\n            if (i.match(/cm$/)) return this.numValue() * this.getDPI(t) / 2.54;\n            if (i.match(/mm$/)) return this.numValue() * this.getDPI(t) / 25.4;\n            if (i.match(/in$/)) return this.numValue() * this.getDPI(t);\n            if (i.match(/%$/)) return this.numValue() * A.ViewPort.ComputeSize(t);\n            var n = this.numValue();\n            return e && n < 1 ? n * A.ViewPort.ComputeSize(t) : n;\n          }, A.Property.prototype.toMilliseconds = function () {\n            if (!this.hasValue()) return 0;\n            var t = this.value + \"\";\n            return t.match(/s$/) ? 1e3 * this.numValue() : (t.match(/ms$/), this.numValue());\n          }, A.Property.prototype.toRadians = function () {\n            if (!this.hasValue()) return 0;\n            var t = this.value + \"\";\n            return t.match(/deg$/) ? this.numValue() * (Math.PI / 180) : t.match(/grad$/) ? this.numValue() * (Math.PI / 200) : t.match(/rad$/) ? this.numValue() : this.numValue() * (Math.PI / 180);\n          };\n          var t = {\n            baseline: \"alphabetic\",\n            \"before-edge\": \"top\",\n            \"text-before-edge\": \"top\",\n            middle: \"middle\",\n            central: \"middle\",\n            \"after-edge\": \"bottom\",\n            \"text-after-edge\": \"bottom\",\n            ideographic: \"ideographic\",\n            alphabetic: \"alphabetic\",\n            hanging: \"hanging\",\n            mathematical: \"alphabetic\"\n          };\n          return A.Property.prototype.toTextBaseline = function () {\n            return this.hasValue() ? t[this.value] : null;\n          }, A.Font = new function () {\n            this.Styles = \"normal|italic|oblique|inherit\", this.Variants = \"normal|small-caps|inherit\", this.Weights = \"normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit\", this.CreateFont = function (t, e, i, n, s, a) {\n              var r = null != a ? this.Parse(a) : this.CreateFont(\"\", \"\", \"\", \"\", \"\", A.ctx.font);\n              return {\n                fontFamily: s = s || r.fontFamily,\n                fontSize: n || r.fontSize,\n                fontStyle: t || r.fontStyle,\n                fontWeight: i || r.fontWeight,\n                fontVariant: e || r.fontVariant,\n                toString: function toString() {\n                  return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(\" \");\n                }\n              };\n            };\n            var r = this;\n\n            this.Parse = function (t) {\n              for (var e = {}, i = A.trim(A.compressSpaces(t || \"\")).split(\" \"), n = {\n                fontSize: !1,\n                fontStyle: !1,\n                fontWeight: !1,\n                fontVariant: !1\n              }, s = \"\", a = 0; a < i.length; a++) {\n                n.fontStyle || -1 == r.Styles.indexOf(i[a]) ? n.fontVariant || -1 == r.Variants.indexOf(i[a]) ? n.fontWeight || -1 == r.Weights.indexOf(i[a]) ? n.fontSize ? \"inherit\" != i[a] && (s += i[a]) : (\"inherit\" != i[a] && (e.fontSize = i[a].split(\"/\")[0]), n.fontStyle = n.fontVariant = n.fontWeight = n.fontSize = !0) : (\"inherit\" != i[a] && (e.fontWeight = i[a]), n.fontStyle = n.fontVariant = n.fontWeight = !0) : (\"inherit\" != i[a] && (e.fontVariant = i[a]), n.fontStyle = n.fontVariant = !0) : (\"inherit\" != i[a] && (e.fontStyle = i[a]), n.fontStyle = !0);\n              }\n\n              return \"\" != s && (e.fontFamily = s), e;\n            };\n          }(), A.ToNumberArray = function (t) {\n            for (var e = A.trim(A.compressSpaces((t || \"\").replace(/,/g, \" \"))).split(\" \"), i = 0; i < e.length; i++) {\n              e[i] = parseFloat(e[i]);\n            }\n\n            return e;\n          }, A.Point = function (t, e) {\n            this.x = t, this.y = e;\n          }, A.Point.prototype.angleTo = function (t) {\n            return Math.atan2(t.y - this.y, t.x - this.x);\n          }, A.Point.prototype.applyTransform = function (t) {\n            var e = this.x * t[0] + this.y * t[2] + t[4],\n                i = this.x * t[1] + this.y * t[3] + t[5];\n            this.x = e, this.y = i;\n          }, A.CreatePoint = function (t) {\n            var e = A.ToNumberArray(t);\n            return new A.Point(e[0], e[1]);\n          }, A.CreatePath = function (t) {\n            for (var e = A.ToNumberArray(t), i = [], n = 0; n < e.length; n += 2) {\n              i.push(new A.Point(e[n], e[n + 1]));\n            }\n\n            return i;\n          }, A.BoundingBox = function (t, e, i, n) {\n            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN, this.x = function () {\n              return this.x1;\n            }, this.y = function () {\n              return this.y1;\n            }, this.width = function () {\n              return this.x2 - this.x1;\n            }, this.height = function () {\n              return this.y2 - this.y1;\n            }, this.addPoint = function (t, e) {\n              null != t && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = t, this.x2 = t), t < this.x1 && (this.x1 = t), t > this.x2 && (this.x2 = t)), null != e && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = e, this.y2 = e), e < this.y1 && (this.y1 = e), e > this.y2 && (this.y2 = e));\n            }, this.addX = function (t) {\n              this.addPoint(t, null);\n            }, this.addY = function (t) {\n              this.addPoint(null, t);\n            }, this.addBoundingBox = function (t) {\n              this.addPoint(t.x1, t.y1), this.addPoint(t.x2, t.y2);\n            }, this.addQuadraticCurve = function (t, e, i, n, s, a) {\n              var r = t + 2 / 3 * (i - t),\n                  o = e + 2 / 3 * (n - e),\n                  l = r + 1 / 3 * (s - t),\n                  h = o + 1 / 3 * (a - e);\n              this.addBezierCurve(t, e, r, l, o, h, s, a);\n            }, this.addBezierCurve = function (t, e, i, n, s, a, r, o) {\n              var l = [t, e],\n                  h = [i, n],\n                  u = [s, a],\n                  c = [r, o];\n              this.addPoint(l[0], l[1]), this.addPoint(c[0], c[1]);\n\n              for (var f = 0; f <= 1; f++) {\n                var m = function m(t) {\n                  return Math.pow(1 - t, 3) * l[f] + 3 * Math.pow(1 - t, 2) * t * h[f] + 3 * (1 - t) * Math.pow(t, 2) * u[f] + Math.pow(t, 3) * c[f];\n                },\n                    p = 6 * l[f] - 12 * h[f] + 6 * u[f],\n                    d = -3 * l[f] + 9 * h[f] - 9 * u[f] + 3 * c[f],\n                    y = 3 * h[f] - 3 * l[f];\n\n                if (0 != d) {\n                  var v = Math.pow(p, 2) - 4 * y * d;\n\n                  if (!(v < 0)) {\n                    var g = (-p + Math.sqrt(v)) / (2 * d);\n                    0 < g && g < 1 && (0 == f && this.addX(m(g)), 1 == f && this.addY(m(g)));\n                    var x = (-p - Math.sqrt(v)) / (2 * d);\n                    0 < x && x < 1 && (0 == f && this.addX(m(x)), 1 == f && this.addY(m(x)));\n                  }\n                } else {\n                  if (0 == p) continue;\n                  var b = -y / p;\n                  0 < b && b < 1 && (0 == f && this.addX(m(b)), 1 == f && this.addY(m(b)));\n                }\n              }\n            }, this.isPointInBox = function (t, e) {\n              return this.x1 <= t && t <= this.x2 && this.y1 <= e && e <= this.y2;\n            }, this.addPoint(t, e), this.addPoint(i, n);\n          }, A.Transform = function (t) {\n            var e = this;\n            this.Type = {}, this.Type.translate = function (t) {\n              this.p = A.CreatePoint(t), this.apply = function (t) {\n                t.translate(this.p.x || 0, this.p.y || 0);\n              }, this.unapply = function (t) {\n                t.translate(-1 * this.p.x || 0, -1 * this.p.y || 0);\n              }, this.applyToPoint = function (t) {\n                t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]);\n              };\n            }, this.Type.rotate = function (t) {\n              var e = A.ToNumberArray(t);\n              this.angle = new A.Property(\"angle\", e[0]), this.cx = e[1] || 0, this.cy = e[2] || 0, this.apply = function (t) {\n                t.translate(this.cx, this.cy), t.rotate(this.angle.toRadians()), t.translate(-this.cx, -this.cy);\n              }, this.unapply = function (t) {\n                t.translate(this.cx, this.cy), t.rotate(-1 * this.angle.toRadians()), t.translate(-this.cx, -this.cy);\n              }, this.applyToPoint = function (t) {\n                var e = this.angle.toRadians();\n                t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]), t.applyTransform([Math.cos(e), Math.sin(e), -Math.sin(e), Math.cos(e), 0, 0]), t.applyTransform([1, 0, 0, 1, -this.p.x || 0, -this.p.y || 0]);\n              };\n            }, this.Type.scale = function (t) {\n              this.p = A.CreatePoint(t), this.apply = function (t) {\n                t.scale(this.p.x || 1, this.p.y || this.p.x || 1);\n              }, this.unapply = function (t) {\n                t.scale(1 / this.p.x || 1, 1 / this.p.y || this.p.x || 1);\n              }, this.applyToPoint = function (t) {\n                t.applyTransform([this.p.x || 0, 0, 0, this.p.y || 0, 0, 0]);\n              };\n            }, this.Type.matrix = function (t) {\n              this.m = A.ToNumberArray(t), this.apply = function (t) {\n                t.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]);\n              }, this.unapply = function (t) {\n                var e = this.m[0],\n                    i = this.m[2],\n                    n = this.m[4],\n                    s = this.m[1],\n                    a = this.m[3],\n                    r = this.m[5],\n                    o = 1 / (e * (1 * a - 0 * r) - i * (1 * s - 0 * r) + n * (0 * s - 0 * a));\n                t.transform(o * (1 * a - 0 * r), o * (0 * r - 1 * s), o * (0 * n - 1 * i), o * (1 * e - 0 * n), o * (i * r - n * a), o * (n * s - e * r));\n              }, this.applyToPoint = function (t) {\n                t.applyTransform(this.m);\n              };\n            }, this.Type.SkewBase = function (t) {\n              this.base = e.Type.matrix, this.base(t), this.angle = new A.Property(\"angle\", t);\n            }, this.Type.SkewBase.prototype = new this.Type.matrix(), this.Type.skewX = function (t) {\n              this.base = e.Type.SkewBase, this.base(t), this.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0];\n            }, this.Type.skewX.prototype = new this.Type.SkewBase(), this.Type.skewY = function (t) {\n              this.base = e.Type.SkewBase, this.base(t), this.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0];\n            }, this.Type.skewY.prototype = new this.Type.SkewBase(), this.transforms = [], this.apply = function (t) {\n              for (var e = 0; e < this.transforms.length; e++) {\n                this.transforms[e].apply(t);\n              }\n            }, this.unapply = function (t) {\n              for (var e = this.transforms.length - 1; 0 <= e; e--) {\n                this.transforms[e].unapply(t);\n              }\n            }, this.applyToPoint = function (t) {\n              for (var e = 0; e < this.transforms.length; e++) {\n                this.transforms[e].applyToPoint(t);\n              }\n            };\n\n            for (var i = A.trim(A.compressSpaces(t)).replace(/\\)([a-zA-Z])/g, \") $1\").replace(/\\)(\\s?,\\s?)/g, \") \").split(/\\s(?=[a-z])/), n = 0; n < i.length; n++) {\n              if (\"none\" !== i[n]) {\n                var s = A.trim(i[n].split(\"(\")[0]),\n                    a = i[n].split(\"(\")[1].replace(\")\", \"\"),\n                    r = this.Type[s];\n\n                if (void 0 !== r) {\n                  var o = new r(a);\n                  o.type = s, this.transforms.push(o);\n                }\n              }\n            }\n          }, A.AspectRatio = function (t, e, i, n, s, a, r, o, l, h) {\n            var u = (e = (e = A.compressSpaces(e)).replace(/^defer\\s/, \"\")).split(\" \")[0] || \"xMidYMid\",\n                c = e.split(\" \")[1] || \"meet\",\n                f = i / n,\n                m = s / a,\n                p = Math.min(f, m),\n                d = Math.max(f, m);\n            \"meet\" == c && (n *= p, a *= p), \"slice\" == c && (n *= d, a *= d), l = new A.Property(\"refX\", l), h = new A.Property(\"refY\", h), l.hasValue() && h.hasValue() ? t.translate(-p * l.toPixels(\"x\"), -p * h.toPixels(\"y\")) : (u.match(/^xMid/) && (\"meet\" == c && p == m || \"slice\" == c && d == m) && t.translate(i / 2 - n / 2, 0), u.match(/YMid$/) && (\"meet\" == c && p == f || \"slice\" == c && d == f) && t.translate(0, s / 2 - a / 2), u.match(/^xMax/) && (\"meet\" == c && p == m || \"slice\" == c && d == m) && t.translate(i - n, 0), u.match(/YMax$/) && (\"meet\" == c && p == f || \"slice\" == c && d == f) && t.translate(0, s - a)), \"none\" == u ? t.scale(f, m) : \"meet\" == c ? t.scale(p, p) : \"slice\" == c && t.scale(d, d), t.translate(null == r ? 0 : -r, null == o ? 0 : -o);\n          }, A.Element = {}, A.EmptyProperty = new A.Property(\"EMPTY\", \"\"), A.Element.ElementBase = function (a) {\n            this.attributes = {}, this.styles = {}, this.stylesSpecificity = {}, this.children = [], this.attribute = function (t, e) {\n              var i = this.attributes[t];\n              return null != i ? i : (1 == e && (i = new A.Property(t, \"\"), this.attributes[t] = i), i || A.EmptyProperty);\n            }, this.getHrefAttribute = function () {\n              for (var t in this.attributes) {\n                if (\"href\" == t || t.match(/:href$/)) return this.attributes[t];\n              }\n\n              return A.EmptyProperty;\n            }, this.style = function (t, e, i) {\n              var n = this.styles[t];\n              if (null != n) return n;\n              var s = this.attribute(t);\n              if (null != s && s.hasValue()) return this.styles[t] = s;\n\n              if (1 != i) {\n                var a = this.parent;\n\n                if (null != a) {\n                  var r = a.style(t);\n                  if (null != r && r.hasValue()) return r;\n                }\n              }\n\n              return 1 == e && (n = new A.Property(t, \"\"), this.styles[t] = n), n || A.EmptyProperty;\n            }, this.render = function (t) {\n              if (\"none\" != this.style(\"display\").value && \"hidden\" != this.style(\"visibility\").value) {\n                if (t.save(), this.style(\"mask\").hasValue()) {\n                  var e = this.style(\"mask\").getDefinition();\n                  null != e && e.apply(t, this);\n                } else if (this.style(\"filter\").hasValue()) {\n                  var i = this.style(\"filter\").getDefinition();\n                  null != i && i.apply(t, this);\n                } else this.setContext(t), this.renderChildren(t), this.clearContext(t);\n\n                t.restore();\n              }\n            }, this.setContext = function (t) {}, this.clearContext = function (t) {}, this.renderChildren = function (t) {\n              for (var e = 0; e < this.children.length; e++) {\n                this.children[e].render(t);\n              }\n            }, this.addChild = function (t, e) {\n              var i = t;\n              e && (i = A.CreateElement(t)), i.parent = this, \"title\" != i.type && this.children.push(i);\n            }, this.addStylesFromStyleDefinition = function () {\n              for (var t in A.Styles) {\n                if (\"@\" != t[0] && f(a, t)) {\n                  var e = A.Styles[t],\n                      i = A.StylesSpecificity[t];\n                  if (null != e) for (var n in e) {\n                    var s = this.stylesSpecificity[n];\n                    void 0 === s && (s = \"000\"), s < i && (this.styles[n] = e[n], this.stylesSpecificity[n] = i);\n                  }\n                }\n              }\n            };\n            var t,\n                e = new RegExp(\"^[A-Z-]+$\");\n\n            if (null != a && 1 == a.nodeType) {\n              for (var i = 0; i < a.attributes.length; i++) {\n                var n = a.attributes[i],\n                    s = (t = n.nodeName, e.test(t) ? t.toLowerCase() : t);\n                this.attributes[s] = new A.Property(s, n.value);\n              }\n\n              if (this.addStylesFromStyleDefinition(), this.attribute(\"style\").hasValue()) {\n                var r = this.attribute(\"style\").value.split(\";\");\n\n                for (i = 0; i < r.length; i++) {\n                  if (\"\" != A.trim(r[i])) {\n                    var o = r[i].split(\":\"),\n                        l = A.trim(o[0]),\n                        h = A.trim(o[1]);\n                    this.styles[l] = new A.Property(l, h);\n                  }\n                }\n              }\n\n              for (this.attribute(\"id\").hasValue() && null == A.Definitions[this.attribute(\"id\").value] && (A.Definitions[this.attribute(\"id\").value] = this), i = 0; i < a.childNodes.length; i++) {\n                var u = a.childNodes[i];\n\n                if (1 == u.nodeType && this.addChild(u, !0), this.captureTextNodes && (3 == u.nodeType || 4 == u.nodeType)) {\n                  var c = u.value || u.text || u.textContent || \"\";\n                  \"\" != A.compressSpaces(c) && this.addChild(new A.Element.tspan(u), !1);\n                }\n              }\n            }\n          }, A.Element.RenderedElementBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.calculateOpacity = function () {\n              for (var t = 1, e = this; null != e;) {\n                var i = e.style(\"opacity\", !1, !0);\n                i.hasValue() && (t *= i.numValue()), e = e.parent;\n              }\n\n              return t;\n            }, this.setContext = function (t, e) {\n              if (!e) {\n                var i;\n                if (this.style(\"fill\").isUrlDefinition()) null != (i = this.style(\"fill\").getFillStyleDefinition(this, this.style(\"fill-opacity\"))) && (t.fillStyle = i);else if (this.style(\"fill\").hasValue()) {\n                  var n;\n                  \"currentColor\" == (n = this.style(\"fill\")).value && (n.value = this.style(\"color\").value), \"inherit\" != n.value && (t.fillStyle = \"none\" == n.value ? \"rgba(0,0,0,0)\" : n.value);\n                }\n                if (this.style(\"fill-opacity\").hasValue() && (n = (n = new A.Property(\"fill\", t.fillStyle)).addOpacity(this.style(\"fill-opacity\")), t.fillStyle = n.value), this.style(\"stroke\").isUrlDefinition()) null != (i = this.style(\"stroke\").getFillStyleDefinition(this, this.style(\"stroke-opacity\"))) && (t.strokeStyle = i);else if (this.style(\"stroke\").hasValue()) {\n                  var s;\n                  \"currentColor\" == (s = this.style(\"stroke\")).value && (s.value = this.style(\"color\").value), \"inherit\" != s.value && (t.strokeStyle = \"none\" == s.value ? \"rgba(0,0,0,0)\" : s.value);\n                }\n\n                if (this.style(\"stroke-opacity\").hasValue() && (s = (s = new A.Property(\"stroke\", t.strokeStyle)).addOpacity(this.style(\"stroke-opacity\")), t.strokeStyle = s.value), this.style(\"stroke-width\").hasValue()) {\n                  var a = this.style(\"stroke-width\").toPixels();\n                  t.lineWidth = 0 == a ? .001 : a;\n                }\n\n                if (this.style(\"stroke-linecap\").hasValue() && (t.lineCap = this.style(\"stroke-linecap\").value), this.style(\"stroke-linejoin\").hasValue() && (t.lineJoin = this.style(\"stroke-linejoin\").value), this.style(\"stroke-miterlimit\").hasValue() && (t.miterLimit = this.style(\"stroke-miterlimit\").value), this.style(\"paint-order\").hasValue() && (t.paintOrder = this.style(\"paint-order\").value), this.style(\"stroke-dasharray\").hasValue() && \"none\" != this.style(\"stroke-dasharray\").value) {\n                  var r = A.ToNumberArray(this.style(\"stroke-dasharray\").value);\n                  void 0 !== t.setLineDash ? t.setLineDash(r) : void 0 !== t.webkitLineDash ? t.webkitLineDash = r : void 0 === t.mozDash || 1 == r.length && 0 == r[0] || (t.mozDash = r);\n                  var o = this.style(\"stroke-dashoffset\").toPixels();\n                  void 0 !== t.lineDashOffset ? t.lineDashOffset = o : void 0 !== t.webkitLineDashOffset ? t.webkitLineDashOffset = o : void 0 !== t.mozDashOffset && (t.mozDashOffset = o);\n                }\n              }\n\n              if (void 0 !== t.font) {\n                t.font = A.Font.CreateFont(this.style(\"font-style\").value, this.style(\"font-variant\").value, this.style(\"font-weight\").value, this.style(\"font-size\").hasValue() ? this.style(\"font-size\").toPixels() + \"px\" : \"\", this.style(\"font-family\").value).toString();\n                var l = this.style(\"font-size\", !1, !1);\n                l.isPixels() && (A.emSize = l.toPixels());\n              }\n\n              if (this.style(\"transform\", !1, !0).hasValue() && new A.Transform(this.style(\"transform\", !1, !0).value).apply(t), this.style(\"clip-path\", !1, !0).hasValue()) {\n                var h = this.style(\"clip-path\", !1, !0).getDefinition();\n                null != h && h.apply(t);\n              }\n\n              t.globalAlpha = this.calculateOpacity();\n            };\n          }, A.Element.RenderedElementBase.prototype = new A.Element.ElementBase(), A.Element.PathElementBase = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.path = function (t) {\n              return null != t && t.beginPath(), new A.BoundingBox();\n            }, this.renderChildren = function (t) {\n              this.path(t), A.Mouse.checkPath(this, t), \"\" != t.fillStyle && (\"inherit\" != this.style(\"fill-rule\").valueOrDefault(\"inherit\") ? t.fill(this.style(\"fill-rule\").value) : t.fill()), \"\" != t.strokeStyle && t.stroke();\n              var e = this.getMarkers();\n\n              if (null != e) {\n                if (this.style(\"marker-start\").isUrlDefinition() && (i = this.style(\"marker-start\").getDefinition()).render(t, e[0][0], e[0][1]), this.style(\"marker-mid\").isUrlDefinition()) for (var i = this.style(\"marker-mid\").getDefinition(), n = 1; n < e.length - 1; n++) {\n                  i.render(t, e[n][0], e[n][1]);\n                }\n                this.style(\"marker-end\").isUrlDefinition() && (i = this.style(\"marker-end\").getDefinition()).render(t, e[e.length - 1][0], e[e.length - 1][1]);\n              }\n            }, this.getBoundingBox = function () {\n              return this.path();\n            }, this.getMarkers = function () {\n              return null;\n            };\n          }, A.Element.PathElementBase.prototype = new A.Element.RenderedElementBase(), A.Element.svg = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.baseClearContext = this.clearContext, this.clearContext = function (t) {\n              this.baseClearContext(t), A.ViewPort.RemoveCurrent();\n            }, this.baseSetContext = this.setContext, this.setContext = function (t) {\n              if (t.strokeStyle = \"rgba(0,0,0,0)\", t.lineCap = \"butt\", t.lineJoin = \"miter\", t.miterLimit = 4, t.canvas.style && void 0 !== t.font && void 0 !== u.getComputedStyle) {\n                t.font = u.getComputedStyle(t.canvas).getPropertyValue(\"font\");\n                var e = new A.Property(\"fontSize\", A.Font.Parse(t.font).fontSize);\n                e.hasValue() && (A.rootEmSize = A.emSize = e.toPixels(\"y\"));\n              }\n\n              this.baseSetContext(t), this.attribute(\"x\").hasValue() || (this.attribute(\"x\", !0).value = 0), this.attribute(\"y\").hasValue() || (this.attribute(\"y\", !0).value = 0), t.translate(this.attribute(\"x\").toPixels(\"x\"), this.attribute(\"y\").toPixels(\"y\"));\n              var i = A.ViewPort.width(),\n                  n = A.ViewPort.height();\n\n              if (this.attribute(\"width\").hasValue() || (this.attribute(\"width\", !0).value = \"100%\"), this.attribute(\"height\").hasValue() || (this.attribute(\"height\", !0).value = \"100%\"), void 0 === this.root) {\n                i = this.attribute(\"width\").toPixels(\"x\"), n = this.attribute(\"height\").toPixels(\"y\");\n                var s = 0,\n                    a = 0;\n                this.attribute(\"refX\").hasValue() && this.attribute(\"refY\").hasValue() && (s = -this.attribute(\"refX\").toPixels(\"x\"), a = -this.attribute(\"refY\").toPixels(\"y\")), \"visible\" != this.attribute(\"overflow\").valueOrDefault(\"hidden\") && (t.beginPath(), t.moveTo(s, a), t.lineTo(i, a), t.lineTo(i, n), t.lineTo(s, n), t.closePath(), t.clip());\n              }\n\n              if (A.ViewPort.SetCurrent(i, n), this.attribute(\"viewBox\").hasValue()) {\n                var r = A.ToNumberArray(this.attribute(\"viewBox\").value),\n                    o = r[0],\n                    l = r[1];\n                i = r[2], n = r[3], A.AspectRatio(t, this.attribute(\"preserveAspectRatio\").value, A.ViewPort.width(), i, A.ViewPort.height(), n, o, l, this.attribute(\"refX\").value, this.attribute(\"refY\").value), A.ViewPort.RemoveCurrent(), A.ViewPort.SetCurrent(r[2], r[3]);\n              }\n            };\n          }, A.Element.svg.prototype = new A.Element.RenderedElementBase(), A.Element.rect = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = this.attribute(\"x\").toPixels(\"x\"),\n                  i = this.attribute(\"y\").toPixels(\"y\"),\n                  n = this.attribute(\"width\").toPixels(\"x\"),\n                  s = this.attribute(\"height\").toPixels(\"y\"),\n                  a = this.attribute(\"rx\").toPixels(\"x\"),\n                  r = this.attribute(\"ry\").toPixels(\"y\");\n\n              if (this.attribute(\"rx\").hasValue() && !this.attribute(\"ry\").hasValue() && (r = a), this.attribute(\"ry\").hasValue() && !this.attribute(\"rx\").hasValue() && (a = r), a = Math.min(a, n / 2), r = Math.min(r, s / 2), null != t) {\n                var o = (Math.sqrt(2) - 1) / 3 * 4;\n                t.beginPath(), t.moveTo(e + a, i), t.lineTo(e + n - a, i), t.bezierCurveTo(e + n - a + o * a, i, e + n, i + r - o * r, e + n, i + r), t.lineTo(e + n, i + s - r), t.bezierCurveTo(e + n, i + s - r + o * r, e + n - a + o * a, i + s, e + n - a, i + s), t.lineTo(e + a, i + s), t.bezierCurveTo(e + a - o * a, i + s, e, i + s - r + o * r, e, i + s - r), t.lineTo(e, i + r), t.bezierCurveTo(e, i + r - o * r, e + a - o * a, i, e + a, i), t.closePath();\n              }\n\n              return new A.BoundingBox(e, i, e + n, i + s);\n            };\n          }, A.Element.rect.prototype = new A.Element.PathElementBase(), A.Element.circle = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = this.attribute(\"cx\").toPixels(\"x\"),\n                  i = this.attribute(\"cy\").toPixels(\"y\"),\n                  n = this.attribute(\"r\").toPixels();\n              return null != t && (t.beginPath(), t.arc(e, i, n, 0, 2 * Math.PI, !1), t.closePath()), new A.BoundingBox(e - n, i - n, e + n, i + n);\n            };\n          }, A.Element.circle.prototype = new A.Element.PathElementBase(), A.Element.ellipse = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = (Math.sqrt(2) - 1) / 3 * 4,\n                  i = this.attribute(\"rx\").toPixels(\"x\"),\n                  n = this.attribute(\"ry\").toPixels(\"y\"),\n                  s = this.attribute(\"cx\").toPixels(\"x\"),\n                  a = this.attribute(\"cy\").toPixels(\"y\");\n              return null != t && (t.beginPath(), t.moveTo(s + i, a), t.bezierCurveTo(s + i, a + e * n, s + e * i, a + n, s, a + n), t.bezierCurveTo(s - e * i, a + n, s - i, a + e * n, s - i, a), t.bezierCurveTo(s - i, a - e * n, s - e * i, a - n, s, a - n), t.bezierCurveTo(s + e * i, a - n, s + i, a - e * n, s + i, a), t.closePath()), new A.BoundingBox(s - i, a - n, s + i, a + n);\n            };\n          }, A.Element.ellipse.prototype = new A.Element.PathElementBase(), A.Element.line = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.getPoints = function () {\n              return [new A.Point(this.attribute(\"x1\").toPixels(\"x\"), this.attribute(\"y1\").toPixels(\"y\")), new A.Point(this.attribute(\"x2\").toPixels(\"x\"), this.attribute(\"y2\").toPixels(\"y\"))];\n            }, this.path = function (t) {\n              var e = this.getPoints();\n              return null != t && (t.beginPath(), t.moveTo(e[0].x, e[0].y), t.lineTo(e[1].x, e[1].y)), new A.BoundingBox(e[0].x, e[0].y, e[1].x, e[1].y);\n            }, this.getMarkers = function () {\n              var t = this.getPoints(),\n                  e = t[0].angleTo(t[1]);\n              return [[t[0], e], [t[1], e]];\n            };\n          }, A.Element.line.prototype = new A.Element.PathElementBase(), A.Element.polyline = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.points = A.CreatePath(this.attribute(\"points\").value), this.path = function (t) {\n              var e = new A.BoundingBox(this.points[0].x, this.points[0].y);\n              null != t && (t.beginPath(), t.moveTo(this.points[0].x, this.points[0].y));\n\n              for (var i = 1; i < this.points.length; i++) {\n                e.addPoint(this.points[i].x, this.points[i].y), null != t && t.lineTo(this.points[i].x, this.points[i].y);\n              }\n\n              return e;\n            }, this.getMarkers = function () {\n              for (var t = [], e = 0; e < this.points.length - 1; e++) {\n                t.push([this.points[e], this.points[e].angleTo(this.points[e + 1])]);\n              }\n\n              return 0 < t.length && t.push([this.points[this.points.length - 1], t[t.length - 1][1]]), t;\n            };\n          }, A.Element.polyline.prototype = new A.Element.PathElementBase(), A.Element.polygon = function (t) {\n            this.base = A.Element.polyline, this.base(t), this.basePath = this.path, this.path = function (t) {\n              var e = this.basePath(t);\n              return null != t && (t.lineTo(this.points[0].x, this.points[0].y), t.closePath()), e;\n            };\n          }, A.Element.polygon.prototype = new A.Element.polyline(), A.Element.path = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t);\n            var e = this.attribute(\"d\").value;\n            e = e.replace(/,/gm, \" \");\n\n            for (var i = 0; i < 2; i++) {\n              e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\\s])/gm, \"$1 $2\");\n            }\n\n            for (e = (e = e.replace(/([^\\s])([MmZzLlHhVvCcSsQqTtAa])/gm, \"$1 $2\")).replace(/([0-9])([+\\-])/gm, \"$1 $2\"), i = 0; i < 2; i++) {\n              e = e.replace(/(\\.[0-9]*)(\\.)/gm, \"$1 $2\");\n            }\n\n            e = e.replace(/([Aa](\\s+[0-9]+){3})\\s+([01])\\s*([01])/gm, \"$1 $3 $4 \"), e = A.compressSpaces(e), e = A.trim(e), this.PathParser = new function (t) {\n              this.tokens = t.split(\" \"), this.reset = function () {\n                this.i = -1, this.command = \"\", this.previousCommand = \"\", this.start = new A.Point(0, 0), this.control = new A.Point(0, 0), this.current = new A.Point(0, 0), this.points = [], this.angles = [];\n              }, this.isEnd = function () {\n                return this.i >= this.tokens.length - 1;\n              }, this.isCommandOrEnd = function () {\n                return !!this.isEnd() || null != this.tokens[this.i + 1].match(/^[A-Za-z]$/);\n              }, this.isRelativeCommand = function () {\n                switch (this.command) {\n                  case \"m\":\n                  case \"l\":\n                  case \"h\":\n                  case \"v\":\n                  case \"c\":\n                  case \"s\":\n                  case \"q\":\n                  case \"t\":\n                  case \"a\":\n                  case \"z\":\n                    return !0;\n                }\n\n                return !1;\n              }, this.getToken = function () {\n                return this.i++, this.tokens[this.i];\n              }, this.getScalar = function () {\n                return parseFloat(this.getToken());\n              }, this.nextCommand = function () {\n                this.previousCommand = this.command, this.command = this.getToken();\n              }, this.getPoint = function () {\n                var t = new A.Point(this.getScalar(), this.getScalar());\n                return this.makeAbsolute(t);\n              }, this.getAsControlPoint = function () {\n                var t = this.getPoint();\n                return this.control = t;\n              }, this.getAsCurrentPoint = function () {\n                var t = this.getPoint();\n                return this.current = t;\n              }, this.getReflectedControlPoint = function () {\n                return \"c\" != this.previousCommand.toLowerCase() && \"s\" != this.previousCommand.toLowerCase() && \"q\" != this.previousCommand.toLowerCase() && \"t\" != this.previousCommand.toLowerCase() ? this.current : new A.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y);\n              }, this.makeAbsolute = function (t) {\n                return this.isRelativeCommand() && (t.x += this.current.x, t.y += this.current.y), t;\n              }, this.addMarker = function (t, e, i) {\n                null != i && 0 < this.angles.length && null == this.angles[this.angles.length - 1] && (this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(i)), this.addMarkerAngle(t, null == e ? null : e.angleTo(t));\n              }, this.addMarkerAngle = function (t, e) {\n                this.points.push(t), this.angles.push(e);\n              }, this.getMarkerPoints = function () {\n                return this.points;\n              }, this.getMarkerAngles = function () {\n                for (var t = 0; t < this.angles.length; t++) {\n                  if (null == this.angles[t]) for (var e = t + 1; e < this.angles.length; e++) {\n                    if (null != this.angles[e]) {\n                      this.angles[t] = this.angles[e];\n                      break;\n                    }\n                  }\n                }\n\n                return this.angles;\n              };\n            }(e), this.path = function (t) {\n              var e = this.PathParser;\n              e.reset();\n              var i = new A.BoundingBox();\n\n              for (null != t && t.beginPath(); !e.isEnd();) {\n                switch (e.nextCommand(), e.command) {\n                  case \"M\":\n                  case \"m\":\n                    var n = e.getAsCurrentPoint();\n\n                    for (e.addMarker(n), i.addPoint(n.x, n.y), null != t && t.moveTo(n.x, n.y), e.start = e.current; !e.isCommandOrEnd();) {\n                      n = e.getAsCurrentPoint(), e.addMarker(n, e.start), i.addPoint(n.x, n.y), null != t && t.lineTo(n.x, n.y);\n                    }\n\n                    break;\n\n                  case \"L\":\n                  case \"l\":\n                    for (; !e.isCommandOrEnd();) {\n                      var s = e.current;\n                      n = e.getAsCurrentPoint(), e.addMarker(n, s), i.addPoint(n.x, n.y), null != t && t.lineTo(n.x, n.y);\n                    }\n\n                    break;\n\n                  case \"H\":\n                  case \"h\":\n                    for (; !e.isCommandOrEnd();) {\n                      var a = new A.Point((e.isRelativeCommand() ? e.current.x : 0) + e.getScalar(), e.current.y);\n                      e.addMarker(a, e.current), e.current = a, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y);\n                    }\n\n                    break;\n\n                  case \"V\":\n                  case \"v\":\n                    for (; !e.isCommandOrEnd();) {\n                      a = new A.Point(e.current.x, (e.isRelativeCommand() ? e.current.y : 0) + e.getScalar()), e.addMarker(a, e.current), e.current = a, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y);\n                    }\n\n                    break;\n\n                  case \"C\":\n                  case \"c\":\n                    for (; !e.isCommandOrEnd();) {\n                      var r = e.current,\n                          o = e.getPoint(),\n                          l = e.getAsControlPoint(),\n                          h = e.getAsCurrentPoint();\n                      e.addMarker(h, l, o), i.addBezierCurve(r.x, r.y, o.x, o.y, l.x, l.y, h.x, h.y), null != t && t.bezierCurveTo(o.x, o.y, l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"S\":\n                  case \"s\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, o = e.getReflectedControlPoint(), l = e.getAsControlPoint(), h = e.getAsCurrentPoint(), e.addMarker(h, l, o), i.addBezierCurve(r.x, r.y, o.x, o.y, l.x, l.y, h.x, h.y), null != t && t.bezierCurveTo(o.x, o.y, l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"Q\":\n                  case \"q\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, l = e.getAsControlPoint(), h = e.getAsCurrentPoint(), e.addMarker(h, l, l), i.addQuadraticCurve(r.x, r.y, l.x, l.y, h.x, h.y), null != t && t.quadraticCurveTo(l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"T\":\n                  case \"t\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, l = e.getReflectedControlPoint(), e.control = l, h = e.getAsCurrentPoint(), e.addMarker(h, l, l), i.addQuadraticCurve(r.x, r.y, l.x, l.y, h.x, h.y), null != t && t.quadraticCurveTo(l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"A\":\n                  case \"a\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current;\n                      var u = e.getScalar(),\n                          c = e.getScalar(),\n                          f = e.getScalar() * (Math.PI / 180),\n                          m = e.getScalar(),\n                          p = e.getScalar(),\n                          d = (h = e.getAsCurrentPoint(), new A.Point(Math.cos(f) * (r.x - h.x) / 2 + Math.sin(f) * (r.y - h.y) / 2, -Math.sin(f) * (r.x - h.x) / 2 + Math.cos(f) * (r.y - h.y) / 2)),\n                          y = Math.pow(d.x, 2) / Math.pow(u, 2) + Math.pow(d.y, 2) / Math.pow(c, 2);\n                      1 < y && (u *= Math.sqrt(y), c *= Math.sqrt(y));\n                      var v = (m == p ? -1 : 1) * Math.sqrt((Math.pow(u, 2) * Math.pow(c, 2) - Math.pow(u, 2) * Math.pow(d.y, 2) - Math.pow(c, 2) * Math.pow(d.x, 2)) / (Math.pow(u, 2) * Math.pow(d.y, 2) + Math.pow(c, 2) * Math.pow(d.x, 2)));\n                      isNaN(v) && (v = 0);\n\n                      var g = new A.Point(v * u * d.y / c, v * -c * d.x / u),\n                          x = new A.Point((r.x + h.x) / 2 + Math.cos(f) * g.x - Math.sin(f) * g.y, (r.y + h.y) / 2 + Math.sin(f) * g.x + Math.cos(f) * g.y),\n                          b = function b(t) {\n                        return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2));\n                      },\n                          P = function P(t, e) {\n                        return (t[0] * e[0] + t[1] * e[1]) / (b(t) * b(e));\n                      },\n                          E = function E(t, e) {\n                        return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(P(t, e));\n                      },\n                          w = E([1, 0], [(d.x - g.x) / u, (d.y - g.y) / c]),\n                          B = [(d.x - g.x) / u, (d.y - g.y) / c],\n                          C = [(-d.x - g.x) / u, (-d.y - g.y) / c],\n                          T = E(B, C);\n\n                      P(B, C) <= -1 && (T = Math.PI), 1 <= P(B, C) && (T = 0);\n                      var V = 1 - p ? 1 : -1,\n                          M = w + V * (T / 2),\n                          S = new A.Point(x.x + u * Math.cos(M), x.y + c * Math.sin(M));\n\n                      if (e.addMarkerAngle(S, M - V * Math.PI / 2), e.addMarkerAngle(h, M - V * Math.PI), i.addPoint(h.x, h.y), null != t) {\n                        P = c < u ? u : c;\n                        var k = c < u ? 1 : u / c,\n                            D = c < u ? c / u : 1;\n                        t.translate(x.x, x.y), t.rotate(f), t.scale(k, D), t.arc(0, 0, P, w, w + T, 1 - p), t.scale(1 / k, 1 / D), t.rotate(-f), t.translate(-x.x, -x.y);\n                      }\n                    }\n\n                    break;\n\n                  case \"Z\":\n                  case \"z\":\n                    null != t && i.x1 !== i.x2 && i.y1 !== i.y2 && t.closePath(), e.current = e.start;\n                }\n              }\n\n              return i;\n            }, this.getMarkers = function () {\n              for (var t = this.PathParser.getMarkerPoints(), e = this.PathParser.getMarkerAngles(), i = [], n = 0; n < t.length; n++) {\n                i.push([t[n], e[n]]);\n              }\n\n              return i;\n            };\n          }, A.Element.path.prototype = new A.Element.PathElementBase(), A.Element.pattern = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.createPattern = function (t, e) {\n              var i = this.attribute(\"width\").toPixels(\"x\", !0),\n                  n = this.attribute(\"height\").toPixels(\"y\", !0),\n                  s = new A.Element.svg();\n              s.attributes.viewBox = new A.Property(\"viewBox\", this.attribute(\"viewBox\").value), s.attributes.width = new A.Property(\"width\", i + \"px\"), s.attributes.height = new A.Property(\"height\", n + \"px\"), s.attributes.transform = new A.Property(\"transform\", this.attribute(\"patternTransform\").value), s.children = this.children;\n              var a = p();\n              a.width = i, a.height = n;\n              var r = a.getContext(\"2d\");\n              this.attribute(\"x\").hasValue() && this.attribute(\"y\").hasValue() && r.translate(this.attribute(\"x\").toPixels(\"x\", !0), this.attribute(\"y\").toPixels(\"y\", !0));\n\n              for (var o = -1; o <= 1; o++) {\n                for (var l = -1; l <= 1; l++) {\n                  r.save(), s.attributes.x = new A.Property(\"x\", o * a.width), s.attributes.y = new A.Property(\"y\", l * a.height), s.render(r), r.restore();\n                }\n              }\n\n              return t.createPattern(a, \"repeat\");\n            };\n          }, A.Element.pattern.prototype = new A.Element.ElementBase(), A.Element.marker = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.baseRender = this.render, this.render = function (t, e, i) {\n              if (e) {\n                t.translate(e.x, e.y), \"auto\" == this.attribute(\"orient\").valueOrDefault(\"auto\") && t.rotate(i), \"strokeWidth\" == this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\") && t.scale(t.lineWidth, t.lineWidth), t.save();\n                var n = new A.Element.svg();\n                n.attributes.viewBox = new A.Property(\"viewBox\", this.attribute(\"viewBox\").value), n.attributes.refX = new A.Property(\"refX\", this.attribute(\"refX\").value), n.attributes.refY = new A.Property(\"refY\", this.attribute(\"refY\").value), n.attributes.width = new A.Property(\"width\", this.attribute(\"markerWidth\").value), n.attributes.height = new A.Property(\"height\", this.attribute(\"markerHeight\").value), n.attributes.fill = new A.Property(\"fill\", this.attribute(\"fill\").valueOrDefault(\"black\")), n.attributes.stroke = new A.Property(\"stroke\", this.attribute(\"stroke\").valueOrDefault(\"none\")), n.children = this.children, n.render(t), t.restore(), \"strokeWidth\" == this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\") && t.scale(1 / t.lineWidth, 1 / t.lineWidth), \"auto\" == this.attribute(\"orient\").valueOrDefault(\"auto\") && t.rotate(-i), t.translate(-e.x, -e.y);\n              }\n            };\n          }, A.Element.marker.prototype = new A.Element.ElementBase(), A.Element.defs = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.render = function (t) {};\n          }, A.Element.defs.prototype = new A.Element.ElementBase(), A.Element.GradientBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.stops = [];\n\n            for (var e = 0; e < this.children.length; e++) {\n              var i = this.children[e];\n              \"stop\" == i.type && this.stops.push(i);\n            }\n\n            this.getGradient = function () {}, this.gradientUnits = function () {\n              return this.attribute(\"gradientUnits\").valueOrDefault(\"objectBoundingBox\");\n            }, this.attributesToInherit = [\"gradientUnits\"], this.inheritStopContainer = function (t) {\n              for (var e = 0; e < this.attributesToInherit.length; e++) {\n                var i = this.attributesToInherit[e];\n                !this.attribute(i).hasValue() && t.attribute(i).hasValue() && (this.attribute(i, !0).value = t.attribute(i).value);\n              }\n            }, this.createGradient = function (t, e, i) {\n              var n = this;\n              this.getHrefAttribute().hasValue() && (n = this.getHrefAttribute().getDefinition(), this.inheritStopContainer(n));\n\n              var s = function s(t) {\n                return i.hasValue() ? new A.Property(\"color\", t).addOpacity(i).value : t;\n              },\n                  a = this.getGradient(t, e);\n\n              if (null == a) return s(n.stops[n.stops.length - 1].color);\n\n              for (var r = 0; r < n.stops.length; r++) {\n                a.addColorStop(n.stops[r].offset, s(n.stops[r].color));\n              }\n\n              if (this.attribute(\"gradientTransform\").hasValue()) {\n                var o = A.ViewPort.viewPorts[0],\n                    l = new A.Element.rect();\n                l.attributes.x = new A.Property(\"x\", -A.MAX_VIRTUAL_PIXELS / 3), l.attributes.y = new A.Property(\"y\", -A.MAX_VIRTUAL_PIXELS / 3), l.attributes.width = new A.Property(\"width\", A.MAX_VIRTUAL_PIXELS), l.attributes.height = new A.Property(\"height\", A.MAX_VIRTUAL_PIXELS);\n                var h = new A.Element.g();\n                h.attributes.transform = new A.Property(\"transform\", this.attribute(\"gradientTransform\").value), h.children = [l];\n                var u = new A.Element.svg();\n                u.attributes.x = new A.Property(\"x\", 0), u.attributes.y = new A.Property(\"y\", 0), u.attributes.width = new A.Property(\"width\", o.width), u.attributes.height = new A.Property(\"height\", o.height), u.children = [h];\n                var c = p();\n                c.width = o.width, c.height = o.height;\n                var f = c.getContext(\"2d\");\n                return f.fillStyle = a, u.render(f), f.createPattern(c, \"no-repeat\");\n              }\n\n              return a;\n            };\n          }, A.Element.GradientBase.prototype = new A.Element.ElementBase(), A.Element.linearGradient = function (t) {\n            this.base = A.Element.GradientBase, this.base(t), this.attributesToInherit.push(\"x1\"), this.attributesToInherit.push(\"y1\"), this.attributesToInherit.push(\"x2\"), this.attributesToInherit.push(\"y2\"), this.getGradient = function (t, e) {\n              var i = \"objectBoundingBox\" == this.gradientUnits() ? e.getBoundingBox(t) : null;\n              this.attribute(\"x1\").hasValue() || this.attribute(\"y1\").hasValue() || this.attribute(\"x2\").hasValue() || this.attribute(\"y2\").hasValue() || (this.attribute(\"x1\", !0).value = 0, this.attribute(\"y1\", !0).value = 0, this.attribute(\"x2\", !0).value = 1, this.attribute(\"y2\", !0).value = 0);\n              var n = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"x1\").numValue() : this.attribute(\"x1\").toPixels(\"x\"),\n                  s = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"y1\").numValue() : this.attribute(\"y1\").toPixels(\"y\"),\n                  a = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"x2\").numValue() : this.attribute(\"x2\").toPixels(\"x\"),\n                  r = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"y2\").numValue() : this.attribute(\"y2\").toPixels(\"y\");\n              return n == a && s == r ? null : t.createLinearGradient(n, s, a, r);\n            };\n          }, A.Element.linearGradient.prototype = new A.Element.GradientBase(), A.Element.radialGradient = function (t) {\n            this.base = A.Element.GradientBase, this.base(t), this.attributesToInherit.push(\"cx\"), this.attributesToInherit.push(\"cy\"), this.attributesToInherit.push(\"r\"), this.attributesToInherit.push(\"fx\"), this.attributesToInherit.push(\"fy\"), this.getGradient = function (t, e) {\n              var i = e.getBoundingBox(t);\n              this.attribute(\"cx\").hasValue() || (this.attribute(\"cx\", !0).value = \"50%\"), this.attribute(\"cy\").hasValue() || (this.attribute(\"cy\", !0).value = \"50%\"), this.attribute(\"r\").hasValue() || (this.attribute(\"r\", !0).value = \"50%\");\n              var n = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"cx\").numValue() : this.attribute(\"cx\").toPixels(\"x\"),\n                  s = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"cy\").numValue() : this.attribute(\"cy\").toPixels(\"y\"),\n                  a = n,\n                  r = s;\n              this.attribute(\"fx\").hasValue() && (a = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"fx\").numValue() : this.attribute(\"fx\").toPixels(\"x\")), this.attribute(\"fy\").hasValue() && (r = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"fy\").numValue() : this.attribute(\"fy\").toPixels(\"y\"));\n              var o = \"objectBoundingBox\" == this.gradientUnits() ? (i.width() + i.height()) / 2 * this.attribute(\"r\").numValue() : this.attribute(\"r\").toPixels();\n              return t.createRadialGradient(a, r, 0, n, s, o);\n            };\n          }, A.Element.radialGradient.prototype = new A.Element.GradientBase(), A.Element.stop = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.offset = this.attribute(\"offset\").numValue(), this.offset < 0 && (this.offset = 0), 1 < this.offset && (this.offset = 1);\n            var e = this.style(\"stop-color\", !0);\n            \"\" === e.value && (e.value = \"#000\"), this.style(\"stop-opacity\").hasValue() && (e = e.addOpacity(this.style(\"stop-opacity\"))), this.color = e.value;\n          }, A.Element.stop.prototype = new A.Element.ElementBase(), A.Element.AnimateBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), A.Animations.push(this), this.duration = 0, this.begin = this.attribute(\"begin\").toMilliseconds(), this.maxDuration = this.begin + this.attribute(\"dur\").toMilliseconds(), this.getProperty = function () {\n              var t = this.attribute(\"attributeType\").value,\n                  e = this.attribute(\"attributeName\").value;\n              return \"CSS\" == t ? this.parent.style(e, !0) : this.parent.attribute(e, !0);\n            }, this.initialValue = null, this.initialUnits = \"\", this.removed = !1, this.calcValue = function () {\n              return \"\";\n            }, this.update = function (t) {\n              if (null == this.initialValue && (this.initialValue = this.getProperty().value, this.initialUnits = this.getProperty().getUnits()), this.duration > this.maxDuration) {\n                if (\"indefinite\" == this.attribute(\"repeatCount\").value || \"indefinite\" == this.attribute(\"repeatDur\").value) this.duration = 0;else if (\"freeze\" != this.attribute(\"fill\").valueOrDefault(\"remove\") || this.frozen) {\n                  if (\"remove\" == this.attribute(\"fill\").valueOrDefault(\"remove\") && !this.removed) return this.removed = !0, this.getProperty().value = this.parent.animationFrozen ? this.parent.animationFrozenValue : this.initialValue, !0;\n                } else this.frozen = !0, this.parent.animationFrozen = !0, this.parent.animationFrozenValue = this.getProperty().value;\n                return !1;\n              }\n\n              this.duration = this.duration + t;\n              var e = !1;\n\n              if (this.begin < this.duration) {\n                var i = this.calcValue();\n                this.attribute(\"type\").hasValue() && (i = this.attribute(\"type\").value + \"(\" + i + \")\"), this.getProperty().value = i, e = !0;\n              }\n\n              return e;\n            }, this.from = this.attribute(\"from\"), this.to = this.attribute(\"to\"), this.values = this.attribute(\"values\"), this.values.hasValue() && (this.values.value = this.values.value.split(\";\")), this.progress = function () {\n              var t = {\n                progress: (this.duration - this.begin) / (this.maxDuration - this.begin)\n              };\n\n              if (this.values.hasValue()) {\n                var e = t.progress * (this.values.value.length - 1),\n                    i = Math.floor(e),\n                    n = Math.ceil(e);\n                t.from = new A.Property(\"from\", parseFloat(this.values.value[i])), t.to = new A.Property(\"to\", parseFloat(this.values.value[n])), t.progress = (e - i) / (n - i);\n              } else t.from = this.from, t.to = this.to;\n\n              return t;\n            };\n          }, A.Element.AnimateBase.prototype = new A.Element.ElementBase(), A.Element.animate = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              var t = this.progress();\n              return t.from.numValue() + (t.to.numValue() - t.from.numValue()) * t.progress + this.initialUnits;\n            };\n          }, A.Element.animate.prototype = new A.Element.AnimateBase(), A.Element.animateColor = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              var t = this.progress(),\n                  e = new m(t.from.value),\n                  i = new m(t.to.value);\n\n              if (e.ok && i.ok) {\n                var n = e.r + (i.r - e.r) * t.progress,\n                    s = e.g + (i.g - e.g) * t.progress,\n                    a = e.b + (i.b - e.b) * t.progress;\n                return \"rgb(\" + parseInt(n, 10) + \",\" + parseInt(s, 10) + \",\" + parseInt(a, 10) + \")\";\n              }\n\n              return this.attribute(\"from\").value;\n            };\n          }, A.Element.animateColor.prototype = new A.Element.AnimateBase(), A.Element.animateTransform = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              for (var t = this.progress(), e = A.ToNumberArray(t.from.value), i = A.ToNumberArray(t.to.value), n = \"\", s = 0; s < e.length; s++) {\n                n += e[s] + (i[s] - e[s]) * t.progress + \" \";\n              }\n\n              return n;\n            };\n          }, A.Element.animateTransform.prototype = new A.Element.animate(), A.Element.font = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.horizAdvX = this.attribute(\"horiz-adv-x\").numValue(), this.isRTL = !1, this.isArabic = !1, this.fontFace = null, this.missingGlyph = null, this.glyphs = [];\n\n            for (var e = 0; e < this.children.length; e++) {\n              var i = this.children[e];\n              \"font-face\" == i.type ? (this.fontFace = i).style(\"font-family\").hasValue() && (A.Definitions[i.style(\"font-family\").value] = this) : \"missing-glyph\" == i.type ? this.missingGlyph = i : \"glyph\" == i.type && (\"\" != i.arabicForm ? (this.isRTL = !0, this.isArabic = !0, void 0 === this.glyphs[i.unicode] && (this.glyphs[i.unicode] = []), this.glyphs[i.unicode][i.arabicForm] = i) : this.glyphs[i.unicode] = i);\n            }\n          }, A.Element.font.prototype = new A.Element.ElementBase(), A.Element.fontface = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.ascent = this.attribute(\"ascent\").value, this.descent = this.attribute(\"descent\").value, this.unitsPerEm = this.attribute(\"units-per-em\").numValue();\n          }, A.Element.fontface.prototype = new A.Element.ElementBase(), A.Element.missingglyph = function (t) {\n            this.base = A.Element.path, this.base(t), this.horizAdvX = 0;\n          }, A.Element.missingglyph.prototype = new A.Element.path(), A.Element.glyph = function (t) {\n            this.base = A.Element.path, this.base(t), this.horizAdvX = this.attribute(\"horiz-adv-x\").numValue(), this.unicode = this.attribute(\"unicode\").value, this.arabicForm = this.attribute(\"arabic-form\").value;\n          }, A.Element.glyph.prototype = new A.Element.path(), A.Element.text = function (t) {\n            this.captureTextNodes = !0, this.base = A.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) {\n              this.baseSetContext(t);\n              var e = this.style(\"dominant-baseline\").toTextBaseline();\n              null == e && (e = this.style(\"alignment-baseline\").toTextBaseline()), null != e && (t.textBaseline = e);\n            }, this.initializeCoordinates = function (t) {\n              this.x = this.attribute(\"x\").toPixels(\"x\"), this.y = this.attribute(\"y\").toPixels(\"y\"), this.attribute(\"dx\").hasValue() && (this.x += this.attribute(\"dx\").toPixels(\"x\")), this.attribute(\"dy\").hasValue() && (this.y += this.attribute(\"dy\").toPixels(\"y\")), this.x += this.getAnchorDelta(t, this, 0);\n            }, this.getBoundingBox = function (t) {\n              this.initializeCoordinates(t);\n\n              for (var e = null, i = 0; i < this.children.length; i++) {\n                var n = this.getChildBoundingBox(t, this, this, i);\n                null == e ? e = n : e.addBoundingBox(n);\n              }\n\n              return e;\n            }, this.renderChildren = function (t) {\n              this.initializeCoordinates(t);\n\n              for (var e = 0; e < this.children.length; e++) {\n                this.renderChild(t, this, this, e);\n              }\n            }, this.getAnchorDelta = function (t, e, i) {\n              var n = this.style(\"text-anchor\").valueOrDefault(\"start\");\n\n              if (\"start\" != n) {\n                for (var s = 0, a = i; a < e.children.length; a++) {\n                  var r = e.children[a];\n                  if (i < a && r.attribute(\"x\").hasValue()) break;\n                  s += r.measureTextRecursive(t);\n                }\n\n                return -1 * (\"end\" == n ? s : s / 2);\n              }\n\n              return 0;\n            }, this.adjustChildCoordinates = function (t, e, i, n) {\n              var s = i.children[n];\n              return s.attribute(\"x\").hasValue() ? (s.x = s.attribute(\"x\").toPixels(\"x\") + e.getAnchorDelta(t, i, n), s.attribute(\"dx\").hasValue() && (s.x += s.attribute(\"dx\").toPixels(\"x\"))) : (s.attribute(\"dx\").hasValue() && (e.x += s.attribute(\"dx\").toPixels(\"x\")), s.x = e.x), e.x = s.x + s.measureText(t), s.attribute(\"y\").hasValue() ? (s.y = s.attribute(\"y\").toPixels(\"y\"), s.attribute(\"dy\").hasValue() && (s.y += s.attribute(\"dy\").toPixels(\"y\"))) : (s.attribute(\"dy\").hasValue() && (e.y += s.attribute(\"dy\").toPixels(\"y\")), s.y = e.y), e.y = s.y, s;\n            }, this.getChildBoundingBox = function (t, e, i, n) {\n              var s = this.adjustChildCoordinates(t, e, i, n),\n                  a = s.getBoundingBox(t);\n\n              for (n = 0; n < s.children.length; n++) {\n                var r = e.getChildBoundingBox(t, e, s, n);\n                a.addBoundingBox(r);\n              }\n\n              return a;\n            }, this.renderChild = function (t, e, i, n) {\n              var s = this.adjustChildCoordinates(t, e, i, n);\n\n              for (s.render(t), n = 0; n < s.children.length; n++) {\n                e.renderChild(t, e, s, n);\n              }\n            };\n          }, A.Element.text.prototype = new A.Element.RenderedElementBase(), A.Element.TextElementBase = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.getGlyph = function (t, e, i) {\n              var n = e[i],\n                  s = null;\n\n              if (t.isArabic) {\n                var a = \"isolated\";\n                (0 == i || \" \" == e[i - 1]) && i < e.length - 2 && \" \" != e[i + 1] && (a = \"terminal\"), 0 < i && \" \" != e[i - 1] && i < e.length - 2 && \" \" != e[i + 1] && (a = \"medial\"), 0 < i && \" \" != e[i - 1] && (i == e.length - 1 || \" \" == e[i + 1]) && (a = \"initial\"), void 0 !== t.glyphs[n] && null == (s = t.glyphs[n][a]) && \"glyph\" == t.glyphs[n].type && (s = t.glyphs[n]);\n              } else s = t.glyphs[n];\n\n              return null == s && (s = t.missingGlyph), s;\n            }, this.renderChildren = function (t) {\n              var e = this.parent.style(\"font-family\").getDefinition();\n              if (null == e) \"stroke\" == t.paintOrder ? (\"\" != t.strokeStyle && t.strokeText(A.compressSpaces(this.getText()), this.x, this.y), \"\" != t.fillStyle && t.fillText(A.compressSpaces(this.getText()), this.x, this.y)) : (\"\" != t.fillStyle && t.fillText(A.compressSpaces(this.getText()), this.x, this.y), \"\" != t.strokeStyle && t.strokeText(A.compressSpaces(this.getText()), this.x, this.y));else {\n                var i = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize),\n                    n = this.parent.style(\"font-style\").valueOrDefault(A.Font.Parse(A.ctx.font).fontStyle),\n                    s = this.getText();\n                e.isRTL && (s = s.split(\"\").reverse().join(\"\"));\n\n                for (var a = A.ToNumberArray(this.parent.attribute(\"dx\").value), r = 0; r < s.length; r++) {\n                  var o = this.getGlyph(e, s, r),\n                      l = i / e.fontFace.unitsPerEm;\n                  t.translate(this.x, this.y), t.scale(l, -l);\n                  var h = t.lineWidth;\n                  t.lineWidth = t.lineWidth * e.fontFace.unitsPerEm / i, \"italic\" == n && t.transform(1, 0, .4, 1, 0, 0), o.render(t), \"italic\" == n && t.transform(1, 0, -.4, 1, 0, 0), t.lineWidth = h, t.scale(1 / l, -1 / l), t.translate(-this.x, -this.y), this.x += i * (o.horizAdvX || e.horizAdvX) / e.fontFace.unitsPerEm, void 0 === a[r] || isNaN(a[r]) || (this.x += a[r]);\n                }\n              }\n            }, this.getText = function () {}, this.measureTextRecursive = function (t) {\n              for (var e = this.measureText(t), i = 0; i < this.children.length; i++) {\n                e += this.children[i].measureTextRecursive(t);\n              }\n\n              return e;\n            }, this.measureText = function (t) {\n              var e = this.parent.style(\"font-family\").getDefinition();\n\n              if (null != e) {\n                var i = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize),\n                    n = 0,\n                    s = this.getText();\n                e.isRTL && (s = s.split(\"\").reverse().join(\"\"));\n\n                for (var a = A.ToNumberArray(this.parent.attribute(\"dx\").value), r = 0; r < s.length; r++) {\n                  n += (this.getGlyph(e, s, r).horizAdvX || e.horizAdvX) * i / e.fontFace.unitsPerEm, void 0 === a[r] || isNaN(a[r]) || (n += a[r]);\n                }\n\n                return n;\n              }\n\n              var o = A.compressSpaces(this.getText());\n              if (!t.measureText) return 10 * o.length;\n              t.save(), this.setContext(t, !0);\n              var l = t.measureText(o).width;\n              return t.restore(), l;\n            }, this.getBoundingBox = function (t) {\n              var e = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize);\n              return new A.BoundingBox(this.x, this.y - e, this.x + this.measureText(t), this.y);\n            };\n          }, A.Element.TextElementBase.prototype = new A.Element.RenderedElementBase(), A.Element.tspan = function (t) {\n            this.captureTextNodes = !0, this.base = A.Element.TextElementBase, this.base(t), this.text = A.compressSpaces(t.value || t.text || t.textContent || \"\"), this.getText = function () {\n              return 0 < this.children.length ? \"\" : this.text;\n            };\n          }, A.Element.tspan.prototype = new A.Element.TextElementBase(), A.Element.tref = function (t) {\n            this.base = A.Element.TextElementBase, this.base(t), this.getText = function () {\n              var t = this.getHrefAttribute().getDefinition();\n              if (null != t) return t.children[0].getText();\n            };\n          }, A.Element.tref.prototype = new A.Element.TextElementBase(), A.Element.a = function (t) {\n            this.base = A.Element.TextElementBase, this.base(t), this.hasText = 0 < t.childNodes.length;\n\n            for (var e = 0; e < t.childNodes.length; e++) {\n              3 != t.childNodes[e].nodeType && (this.hasText = !1);\n            }\n\n            this.text = this.hasText ? t.childNodes[0].value || t.childNodes[0].data : \"\", this.getText = function () {\n              return this.text;\n            }, this.baseRenderChildren = this.renderChildren, this.renderChildren = function (t) {\n              if (this.hasText) {\n                this.baseRenderChildren(t);\n                var e = new A.Property(\"fontSize\", A.Font.Parse(A.ctx.font).fontSize);\n                A.Mouse.checkBoundingBox(this, new A.BoundingBox(this.x, this.y - e.toPixels(\"y\"), this.x + this.measureText(t), this.y));\n              } else if (0 < this.children.length) {\n                var i = new A.Element.g();\n                i.children = this.children, i.parent = this, i.render(t);\n              }\n            }, this.onclick = function () {\n              u.open(this.getHrefAttribute().value);\n            }, this.onmousemove = function () {\n              A.ctx.canvas.style.cursor = \"pointer\";\n            };\n          }, A.Element.a.prototype = new A.Element.TextElementBase(), A.Element.image = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t);\n            var e = this.getHrefAttribute().value;\n\n            if (\"\" != e) {\n              var a = e.match(/\\.svg$/);\n              if (A.Images.push(this), this.loaded = !1, a) this.img = A.ajax(e), this.loaded = !0;else {\n                this.img = document.createElement(\"img\"), 1 == A.opts.useCORS && (this.img.crossOrigin = \"Anonymous\");\n                var r = this;\n                this.img.onload = function () {\n                  r.loaded = !0;\n                }, this.img.onerror = function () {\n                  A.log('ERROR: image \"' + e + '\" not found'), r.loaded = !0;\n                }, this.img.src = e;\n              }\n              this.renderChildren = function (t) {\n                var e = this.attribute(\"x\").toPixels(\"x\"),\n                    i = this.attribute(\"y\").toPixels(\"y\"),\n                    n = this.attribute(\"width\").toPixels(\"x\"),\n                    s = this.attribute(\"height\").toPixels(\"y\");\n                0 != n && 0 != s && (t.save(), a ? t.drawSvg(this.img, e, i, n, s) : (t.translate(e, i), A.AspectRatio(t, this.attribute(\"preserveAspectRatio\").value, n, this.img.width, s, this.img.height, 0, 0), r.loaded && (void 0 === this.img.complete || this.img.complete) && t.drawImage(this.img, 0, 0)), t.restore());\n              }, this.getBoundingBox = function () {\n                var t = this.attribute(\"x\").toPixels(\"x\"),\n                    e = this.attribute(\"y\").toPixels(\"y\"),\n                    i = this.attribute(\"width\").toPixels(\"x\"),\n                    n = this.attribute(\"height\").toPixels(\"y\");\n                return new A.BoundingBox(t, e, t + i, e + n);\n              };\n            }\n          }, A.Element.image.prototype = new A.Element.RenderedElementBase(), A.Element.g = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.getBoundingBox = function (t) {\n              for (var e = new A.BoundingBox(), i = 0; i < this.children.length; i++) {\n                e.addBoundingBox(this.children[i].getBoundingBox(t));\n              }\n\n              return e;\n            };\n          }, A.Element.g.prototype = new A.Element.RenderedElementBase(), A.Element.symbol = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.render = function (t) {};\n          }, A.Element.symbol.prototype = new A.Element.RenderedElementBase(), A.Element.style = function (t) {\n            this.base = A.Element.ElementBase, this.base(t);\n\n            for (var e = \"\", i = 0; i < t.childNodes.length; i++) {\n              e += t.childNodes[i].data;\n            }\n\n            e = e.replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, \"\");\n            var n = (e = A.compressSpaces(e)).split(\"}\");\n\n            for (i = 0; i < n.length; i++) {\n              if (\"\" != A.trim(n[i])) for (var s = n[i].split(\"{\"), a = s[0].split(\",\"), r = s[1].split(\";\"), o = 0; o < a.length; o++) {\n                var l = A.trim(a[o]);\n\n                if (\"\" != l) {\n                  for (var h = A.Styles[l] || {}, u = 0; u < r.length; u++) {\n                    var c = r[u].indexOf(\":\"),\n                        f = r[u].substr(0, c),\n                        m = r[u].substr(c + 1, r[u].length - c);\n                    null != f && null != m && (h[A.trim(f)] = new A.Property(A.trim(f), A.trim(m)));\n                  }\n\n                  if (A.Styles[l] = h, A.StylesSpecificity[l] = w(l), \"@font-face\" == l) for (var p = h[\"font-family\"].value.replace(/\"/g, \"\"), d = h.src.value.split(\",\"), y = 0; y < d.length; y++) {\n                    if (0 < d[y].indexOf('format(\"svg\")')) for (var v = d[y].indexOf(\"url\"), g = d[y].indexOf(\")\", v), x = d[y].substr(v + 5, g - v - 6), b = A.parseXml(A.ajax(x)).getElementsByTagName(\"font\"), P = 0; P < b.length; P++) {\n                      var E = A.CreateElement(b[P]);\n                      A.Definitions[p] = E;\n                    }\n                  }\n                }\n              }\n            }\n          }, A.Element.style.prototype = new A.Element.ElementBase(), A.Element.use = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) {\n              this.baseSetContext(t), this.attribute(\"x\").hasValue() && t.translate(this.attribute(\"x\").toPixels(\"x\"), 0), this.attribute(\"y\").hasValue() && t.translate(0, this.attribute(\"y\").toPixels(\"y\"));\n            };\n            var n = this.getHrefAttribute().getDefinition();\n            this.path = function (t) {\n              null != n && n.path(t);\n            }, this.elementTransform = function () {\n              if (null != n && n.style(\"transform\", !1, !0).hasValue()) return new A.Transform(n.style(\"transform\", !1, !0).value);\n            }, this.getBoundingBox = function (t) {\n              if (null != n) return n.getBoundingBox(t);\n            }, this.renderChildren = function (t) {\n              if (null != n) {\n                var e = n;\n                \"symbol\" == n.type && ((e = new A.Element.svg()).type = \"svg\", e.attributes.viewBox = new A.Property(\"viewBox\", n.attribute(\"viewBox\").value), e.attributes.preserveAspectRatio = new A.Property(\"preserveAspectRatio\", n.attribute(\"preserveAspectRatio\").value), e.attributes.overflow = new A.Property(\"overflow\", n.attribute(\"overflow\").value), e.children = n.children), \"svg\" == e.type && (this.attribute(\"width\").hasValue() && (e.attributes.width = new A.Property(\"width\", this.attribute(\"width\").value)), this.attribute(\"height\").hasValue() && (e.attributes.height = new A.Property(\"height\", this.attribute(\"height\").value)));\n                var i = e.parent;\n                e.parent = null, e.render(t), e.parent = i;\n              }\n            };\n          }, A.Element.use.prototype = new A.Element.RenderedElementBase(), A.Element.mask = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e) {\n              var i = this.attribute(\"x\").toPixels(\"x\"),\n                  n = this.attribute(\"y\").toPixels(\"y\"),\n                  s = this.attribute(\"width\").toPixels(\"x\"),\n                  a = this.attribute(\"height\").toPixels(\"y\");\n\n              if (0 == s && 0 == a) {\n                for (var r = new A.BoundingBox(), o = 0; o < this.children.length; o++) {\n                  r.addBoundingBox(this.children[o].getBoundingBox(t));\n                }\n\n                i = Math.floor(r.x1), n = Math.floor(r.y1), s = Math.floor(r.width()), a = Math.floor(r.height());\n              }\n\n              var l = e.attribute(\"mask\").value;\n              e.attribute(\"mask\").value = \"\";\n              var h = p();\n              h.width = i + s, h.height = n + a;\n              var u = h.getContext(\"2d\");\n              this.renderChildren(u);\n              var c = p();\n              c.width = i + s, c.height = n + a;\n              var f = c.getContext(\"2d\");\n              e.render(f), f.globalCompositeOperation = \"destination-in\", f.fillStyle = u.createPattern(h, \"no-repeat\"), f.fillRect(0, 0, i + s, n + a), t.fillStyle = f.createPattern(c, \"no-repeat\"), t.fillRect(0, 0, i + s, n + a), e.attribute(\"mask\").value = l;\n            }, this.render = function (t) {};\n          }, A.Element.mask.prototype = new A.Element.ElementBase(), A.Element.clipPath = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t) {\n              var e = \"undefined\" != typeof CanvasRenderingContext2D,\n                  i = t.beginPath,\n                  n = t.closePath;\n              e && (CanvasRenderingContext2D.prototype.beginPath = function () {}, CanvasRenderingContext2D.prototype.closePath = function () {}), i.call(t);\n\n              for (var s = 0; s < this.children.length; s++) {\n                var a = this.children[s];\n\n                if (void 0 !== a.path) {\n                  var r = void 0 !== a.elementTransform && a.elementTransform();\n                  !r && a.style(\"transform\", !1, !0).hasValue() && (r = new A.Transform(a.style(\"transform\", !1, !0).value)), r && r.apply(t), a.path(t), e && (CanvasRenderingContext2D.prototype.closePath = n), r && r.unapply(t);\n                }\n              }\n\n              n.call(t), t.clip(), e && (CanvasRenderingContext2D.prototype.beginPath = i, CanvasRenderingContext2D.prototype.closePath = n);\n            }, this.render = function (t) {};\n          }, A.Element.clipPath.prototype = new A.Element.ElementBase(), A.Element.filter = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e) {\n              var i = e.getBoundingBox(t),\n                  n = Math.floor(i.x1),\n                  s = Math.floor(i.y1),\n                  a = Math.floor(i.width()),\n                  r = Math.floor(i.height()),\n                  o = e.style(\"filter\").value;\n              e.style(\"filter\").value = \"\";\n\n              for (var l = 0, h = 0, u = 0; u < this.children.length; u++) {\n                var c = this.children[u].extraFilterDistance || 0;\n                l = Math.max(l, c), h = Math.max(h, c);\n              }\n\n              var f = p();\n              f.width = a + 2 * l, f.height = r + 2 * h;\n              var m = f.getContext(\"2d\");\n\n              for (m.translate(-n + l, -s + h), e.render(m), u = 0; u < this.children.length; u++) {\n                \"function\" == typeof this.children[u].apply && this.children[u].apply(m, 0, 0, a + 2 * l, r + 2 * h);\n              }\n\n              t.drawImage(f, 0, 0, a + 2 * l, r + 2 * h, n - l, s - h, a + 2 * l, r + 2 * h), e.style(\"filter\", !0).value = o;\n            }, this.render = function (t) {};\n          }, A.Element.filter.prototype = new A.Element.ElementBase(), A.Element.feMorphology = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, s) {};\n          }, A.Element.feMorphology.prototype = new A.Element.ElementBase(), A.Element.feComposite = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, s) {};\n          }, A.Element.feComposite.prototype = new A.Element.ElementBase(), A.Element.feColorMatrix = function (t) {\n            this.base = A.Element.ElementBase, this.base(t);\n            var n = A.ToNumberArray(this.attribute(\"values\").value);\n\n            switch (this.attribute(\"type\").valueOrDefault(\"matrix\")) {\n              case \"saturate\":\n                var e = n[0];\n                n = [.213 + .787 * e, .715 - .715 * e, .072 - .072 * e, 0, 0, .213 - .213 * e, .715 + .285 * e, .072 - .072 * e, 0, 0, .213 - .213 * e, .715 - .715 * e, .072 + .928 * e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n                break;\n\n              case \"hueRotate\":\n                var s = n[0] * Math.PI / 180,\n                    i = function i(t, e, _i) {\n                  return t + Math.cos(s) * e + Math.sin(s) * _i;\n                };\n\n                n = [i(.213, .787, -.213), i(.715, -.715, -.715), i(.072, -.072, .928), 0, 0, i(.213, -.213, .143), i(.715, .285, .14), i(.072, -.072, -.283), 0, 0, i(.213, -.213, -.787), i(.715, -.715, .715), i(.072, .928, .072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n                break;\n\n              case \"luminanceToAlpha\":\n                n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .2125, .7154, .0721, 0, 0, 0, 0, 0, 0, 1];\n            }\n\n            function u(t, e, i, n, s, a) {\n              return t[i * n * 4 + 4 * e + a];\n            }\n\n            function c(t, e, i, n, s, a, r) {\n              t[i * n * 4 + 4 * e + a] = r;\n            }\n\n            function f(t, e) {\n              var i = n[t];\n              return i * (i < 0 ? e - 255 : e);\n            }\n\n            this.apply = function (t, e, i, n, s) {\n              var a = t.getImageData(0, 0, n, s);\n\n              for (i = 0; i < s; i++) {\n                for (e = 0; e < n; e++) {\n                  var r = u(a.data, e, i, n, 0, 0),\n                      o = u(a.data, e, i, n, 0, 1),\n                      l = u(a.data, e, i, n, 0, 2),\n                      h = u(a.data, e, i, n, 0, 3);\n                  c(a.data, e, i, n, 0, 0, f(0, r) + f(1, o) + f(2, l) + f(3, h) + f(4, 1)), c(a.data, e, i, n, 0, 1, f(5, r) + f(6, o) + f(7, l) + f(8, h) + f(9, 1)), c(a.data, e, i, n, 0, 2, f(10, r) + f(11, o) + f(12, l) + f(13, h) + f(14, 1)), c(a.data, e, i, n, 0, 3, f(15, r) + f(16, o) + f(17, l) + f(18, h) + f(19, 1));\n                }\n              }\n\n              t.clearRect(0, 0, n, s), t.putImageData(a, 0, 0);\n            };\n          }, A.Element.feColorMatrix.prototype = new A.Element.ElementBase(), A.Element.feGaussianBlur = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.blurRadius = Math.floor(this.attribute(\"stdDeviation\").numValue()), this.extraFilterDistance = this.blurRadius, this.apply = function (t, e, i, n, s) {\n              d && void 0 !== d.canvasRGBA ? (t.canvas.id = A.UniqueId(), t.canvas.style.display = \"none\", document.body.appendChild(t.canvas), d.canvasRGBA(t.canvas, e, i, n, s, this.blurRadius), document.body.removeChild(t.canvas)) : A.log(\"ERROR: StackBlur.js must be included for blur to work\");\n            };\n          }, A.Element.feGaussianBlur.prototype = new A.Element.ElementBase(), A.Element.title = function (t) {}, A.Element.title.prototype = new A.Element.ElementBase(), A.Element.desc = function (t) {}, A.Element.desc.prototype = new A.Element.ElementBase(), A.Element.MISSING = function (t) {\n            A.log(\"ERROR: Element '\" + t.nodeName + \"' not yet implemented.\");\n          }, A.Element.MISSING.prototype = new A.Element.ElementBase(), A.CreateElement = function (t) {\n            var e = t.nodeName.replace(/^[^:]+:/, \"\");\n            e = e.replace(/\\-/g, \"\");\n            var i = null;\n            return (i = void 0 !== A.Element[e] ? new A.Element[e](t) : new A.Element.MISSING(t)).type = t.nodeName, i;\n          }, A.load = function (t, e) {\n            A.loadXml(t, A.ajax(e));\n          }, A.loadXml = function (t, e) {\n            A.loadXmlDoc(t, A.parseXml(e));\n          }, A.loadXmlDoc = function (a, r) {\n            A.init(a);\n\n            var i = function i(t) {\n              for (var e = a.canvas; e;) {\n                t.x -= e.offsetLeft, t.y -= e.offsetTop, e = e.offsetParent;\n              }\n\n              return u.scrollX && (t.x += u.scrollX), u.scrollY && (t.y += u.scrollY), t;\n            };\n\n            1 != A.opts.ignoreMouse && (a.canvas.onclick = function (t) {\n              var e = i(new A.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY));\n              A.Mouse.onclick(e.x, e.y);\n            }, a.canvas.onmousemove = function (t) {\n              var e = i(new A.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY));\n              A.Mouse.onmousemove(e.x, e.y);\n            });\n            var o = A.CreateElement(r.documentElement);\n            o.root = !0, o.addStylesFromStyleDefinition();\n\n            var l = !0,\n                n = function n() {\n              A.ViewPort.Clear(), a.canvas.parentNode ? A.ViewPort.SetCurrent(a.canvas.parentNode.clientWidth, a.canvas.parentNode.clientHeight) : A.ViewPort.SetCurrent(800, 600), 1 != A.opts.ignoreDimensions && (o.style(\"width\").hasValue() && (a.canvas.width = o.style(\"width\").toPixels(\"x\"), a.canvas.style && (a.canvas.style.width = a.canvas.width + \"px\")), o.style(\"height\").hasValue() && (a.canvas.height = o.style(\"height\").toPixels(\"y\"), a.canvas.style && (a.canvas.style.height = a.canvas.height + \"px\")));\n              var t = a.canvas.clientWidth || a.canvas.width,\n                  e = a.canvas.clientHeight || a.canvas.height;\n\n              if (1 == A.opts.ignoreDimensions && o.style(\"width\").hasValue() && o.style(\"height\").hasValue() && (t = o.style(\"width\").toPixels(\"x\"), e = o.style(\"height\").toPixels(\"y\")), A.ViewPort.SetCurrent(t, e), null != A.opts.offsetX && (o.attribute(\"x\", !0).value = A.opts.offsetX), null != A.opts.offsetY && (o.attribute(\"y\", !0).value = A.opts.offsetY), null != A.opts.scaleWidth || null != A.opts.scaleHeight) {\n                var i = null,\n                    n = null,\n                    s = A.ToNumberArray(o.attribute(\"viewBox\").value);\n                null != A.opts.scaleWidth && (o.attribute(\"width\").hasValue() ? i = o.attribute(\"width\").toPixels(\"x\") / A.opts.scaleWidth : isNaN(s[2]) || (i = s[2] / A.opts.scaleWidth)), null != A.opts.scaleHeight && (o.attribute(\"height\").hasValue() ? n = o.attribute(\"height\").toPixels(\"y\") / A.opts.scaleHeight : isNaN(s[3]) || (n = s[3] / A.opts.scaleHeight)), null == i && (i = n), null == n && (n = i), o.attribute(\"width\", !0).value = A.opts.scaleWidth, o.attribute(\"height\", !0).value = A.opts.scaleHeight, o.style(\"transform\", !0, !0).value += \" scale(\" + 1 / i + \",\" + 1 / n + \")\";\n              }\n\n              1 != A.opts.ignoreClear && a.clearRect(0, 0, t, e), o.render(a), l && (l = !1, \"function\" == typeof A.opts.renderCallback && A.opts.renderCallback(r));\n            },\n                s = !0;\n\n            A.ImagesLoaded() && (s = !1, n()), A.intervalID = setInterval(function () {\n              var t = !1;\n              if (s && A.ImagesLoaded() && (t = !(s = !1)), 1 != A.opts.ignoreMouse && (t |= A.Mouse.hasEvents()), 1 != A.opts.ignoreAnimation) for (var e = 0; e < A.Animations.length; e++) {\n                t |= A.Animations[e].update(1e3 / A.FRAMERATE);\n              }\n              \"function\" == typeof A.opts.forceRedraw && 1 == A.opts.forceRedraw() && (t = !0), t && (n(), A.Mouse.runEvents());\n            }, 1e3 / A.FRAMERATE);\n          }, A.stop = function () {\n            A.intervalID && clearInterval(A.intervalID);\n          }, A.Mouse = new function () {\n            this.events = [], this.hasEvents = function () {\n              return 0 != this.events.length;\n            }, this.onclick = function (t, e) {\n              this.events.push({\n                type: \"onclick\",\n                x: t,\n                y: e,\n                run: function run(t) {\n                  t.onclick && t.onclick();\n                }\n              });\n            }, this.onmousemove = function (t, e) {\n              this.events.push({\n                type: \"onmousemove\",\n                x: t,\n                y: e,\n                run: function run(t) {\n                  t.onmousemove && t.onmousemove();\n                }\n              });\n            }, this.eventElements = [], this.checkPath = function (t, e) {\n              for (var i = 0; i < this.events.length; i++) {\n                var n = this.events[i];\n                e.isPointInPath && e.isPointInPath(n.x, n.y) && (this.eventElements[i] = t);\n              }\n            }, this.checkBoundingBox = function (t, e) {\n              for (var i = 0; i < this.events.length; i++) {\n                var n = this.events[i];\n                e.isPointInBox(n.x, n.y) && (this.eventElements[i] = t);\n              }\n            }, this.runEvents = function () {\n              A.ctx.canvas.style.cursor = \"\";\n\n              for (var t = 0; t < this.events.length; t++) {\n                for (var e = this.events[t], i = this.eventElements[t]; i;) {\n                  e.run(i), i = i.parent;\n                }\n              }\n\n              this.events = [], this.eventElements = [];\n            };\n          }(), A;\n        }(i || {});\n\n        \"string\" == typeof t && (t = document.getElementById(t)), null != t.svg && t.svg.stop(), t.childNodes && 1 == t.childNodes.length && \"OBJECT\" == t.childNodes[0].nodeName || (t.svg = n);\n        var s = t.getContext(\"2d\");\n        void 0 !== e.documentElement ? n.loadXmlDoc(s, e) : \"<\" == e.substr(0, 1) ? n.loadXml(s, e) : n.load(s, e);\n      } else for (var a = document.querySelectorAll(\"svg\"), r = 0; r < a.length; r++) {\n        var o = a[r],\n            l = document.createElement(\"canvas\");\n        l.width = o.clientWidth, l.height = o.clientHeight, o.parentNode.insertBefore(l, o), o.parentNode.removeChild(o);\n        var h = document.createElement(\"div\");\n        h.appendChild(o), c(l, h.innerHTML);\n      }\n    };\n\n    \"undefined\" == typeof Element || (void 0 !== Element.prototype.matches ? f = function f(t, e) {\n      return t.matches(e);\n    } : void 0 !== Element.prototype.webkitMatchesSelector ? f = function f(t, e) {\n      return t.webkitMatchesSelector(e);\n    } : void 0 !== Element.prototype.mozMatchesSelector ? f = function f(t, e) {\n      return t.mozMatchesSelector(e);\n    } : void 0 !== Element.prototype.msMatchesSelector ? f = function f(t, e) {\n      return t.msMatchesSelector(e);\n    } : void 0 !== Element.prototype.oMatchesSelector ? f = function f(t, e) {\n      return t.oMatchesSelector(e);\n    } : (\"function\" != typeof jQuery && \"function\" != typeof Zepto || (f = function f(t, e) {\n      return $(t).is(e);\n    }), void 0 === f && \"undefined\" != typeof Sizzle && (f = Sizzle.matchesSelector)));\n    var e = /(\\[[^\\]]+\\])/g,\n        i = /(#[^\\s\\+>~\\.\\[:]+)/g,\n        a = /(\\.[^\\s\\+>~\\.\\[:]+)/g,\n        r = /(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi,\n        o = /(:[\\w-]+\\([^\\)]*\\))/gi,\n        l = /(:[^\\s\\+>~\\.\\[:]+)/g,\n        h = /([^\\s\\+>~\\.\\[:]+)/g;\n\n    function w(n) {\n      var s = [0, 0, 0],\n          t = function t(_t, e) {\n        var i = n.match(_t);\n        null != i && (s[e] += i.length, n = n.replace(_t, \" \"));\n      };\n\n      return n = (n = n.replace(/:not\\(([^\\)]*)\\)/g, \"     $1 \")).replace(/{[\\s\\S]*/gm, \" \"), t(e, 1), t(i, 0), t(a, 1), t(r, 2), t(o, 1), t(l, 1), n = (n = n.replace(/[\\*\\s\\+>~]/g, \" \")).replace(/[#\\.]/g, \" \"), t(h, 2), s.join(\"\");\n    }\n\n    \"undefined\" != typeof CanvasRenderingContext2D && (CanvasRenderingContext2D.prototype.drawSvg = function (t, e, i, n, s, a) {\n      var r = {\n        ignoreMouse: !0,\n        ignoreAnimation: !0,\n        ignoreDimensions: !0,\n        ignoreClear: !0,\n        offsetX: e,\n        offsetY: i,\n        scaleWidth: n,\n        scaleHeight: s\n      };\n\n      for (var o in a) {\n        a.hasOwnProperty(o) && (r[o] = a[o]);\n      }\n\n      c(this.canvas, t, r);\n    }), t.exports = c;\n  }(t = {\n    exports: {}\n  }, t.exports), t.exports;\n});","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\nmodule.exports = function (color_string) {\n  this.ok = false;\n  this.alpha = 1.0; // strip any leading #\n\n  if (color_string.charAt(0) == '#') {\n    // remove # if any\n    color_string = color_string.substr(1, 6);\n  }\n\n  color_string = color_string.replace(/ /g, '');\n  color_string = color_string.toLowerCase(); // before getting into regexps, try simple matches\n  // and overwrite the input\n\n  var simple_colors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '00ffff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000000',\n    blanchedalmond: 'ffebcd',\n    blue: '0000ff',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '00ffff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dodgerblue: '1e90ff',\n    feldspar: 'd19275',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'ff00ff',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslateblue: '8470ff',\n    lightslategray: '778899',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '00ff00',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'ff00ff',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'ff0000',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    violetred: 'd02090',\n    wheat: 'f5deb3',\n    white: 'ffffff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ffff00',\n    yellowgreen: '9acd32'\n  };\n  color_string = simple_colors[color_string] || color_string; // emd of simple type-in colors\n  // array of color definition objects\n\n  var color_defs = [{\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n    example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n    process: function process(bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3]), parseFloat(bits[4])];\n    }\n  }, {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process: function process(bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    example: ['#00ff00', '336699'],\n    process: function process(bits) {\n      return [parseInt(bits[1], 16), parseInt(bits[2], 16), parseInt(bits[3], 16)];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    example: ['#fb0', 'f0f'],\n    process: function process(bits) {\n      return [parseInt(bits[1] + bits[1], 16), parseInt(bits[2] + bits[2], 16), parseInt(bits[3] + bits[3], 16)];\n    }\n  }]; // search through the definitions to find a match\n\n  for (var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n\n    if (bits) {\n      var channels = processor(bits);\n      this.r = channels[0];\n      this.g = channels[1];\n      this.b = channels[2];\n\n      if (channels.length > 3) {\n        this.alpha = channels[3];\n      }\n\n      this.ok = true;\n    }\n  } // validate/cleanup values\n\n\n  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;\n  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;\n  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;\n  this.alpha = this.alpha < 0 ? 0 : this.alpha > 1.0 || isNaN(this.alpha) ? 1.0 : this.alpha; // some getters\n\n  this.toRGB = function () {\n    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n  };\n\n  this.toRGBA = function () {\n    return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n  };\n\n  this.toHex = function () {\n    var r = this.r.toString(16);\n    var g = this.g.toString(16);\n    var b = this.b.toString(16);\n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    return '#' + r + g + b;\n  }; // help\n\n\n  this.getHelpXML = function () {\n    var examples = new Array(); // add regexps\n\n    for (var i = 0; i < color_defs.length; i++) {\n      var example = color_defs[i].example;\n\n      for (var j = 0; j < example.length; j++) {\n        examples[examples.length] = example[j];\n      }\n    } // add type-in colors\n\n\n    for (var sc in simple_colors) {\n      examples[examples.length] = sc;\n    }\n\n    var xml = document.createElement('ul');\n    xml.setAttribute('id', 'rgbcolor-examples');\n\n    for (var i = 0; i < examples.length; i++) {\n      try {\n        var list_item = document.createElement('li');\n        var list_color = new RGBColor(examples[i]);\n        var example_div = document.createElement('div');\n        example_div.style.cssText = 'margin: 3px; ' + 'border: 1px solid black; ' + 'background:' + list_color.toHex() + '; ' + 'color:' + list_color.toHex();\n        example_div.appendChild(document.createTextNode('test'));\n        var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());\n        list_item.appendChild(example_div);\n        list_item.appendChild(list_item_value);\n        xml.appendChild(list_item);\n      } catch (e) {}\n    }\n\n    return xml;\n  };\n};","/*\n    StackBlur - a fast almost Gaussian Blur For Canvas\n\n    Version:     0.5\n    Author:        Mario Klingemann\n    Contact:     mario@quasimondo.com\n    Website:    http://www.quasimondo.com/StackBlurForCanvas\n    Twitter:    @quasimondo\n\n    In case you find this class useful - especially in commercial projects -\n    I am not totally unhappy for a small donation to my PayPal account\n    mario@quasimondo.de\n\n    Or support me on flattr:\n    https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n    Copyright (c) 2010 Mario Klingemann\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n    */\nvar mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n\nfunction processImage(img, canvas, radius, blurAlphaChannel) {\n  if (typeof img == 'string') {\n    var img = document.getElementById(img);\n  } else if (typeof HTMLImageElement !== 'undefined' && !img instanceof HTMLImageElement) {\n    return;\n  }\n\n  var w = img.naturalWidth;\n  var h = img.naturalHeight;\n\n  if (typeof canvas == 'string') {\n    var canvas = document.getElementById(canvas);\n  } else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0);\n  if (isNaN(radius) || radius < 1) return;\n  if (blurAlphaChannel) processCanvasRGBA(canvas, 0, 0, w, h, radius);else processCanvasRGB(canvas, 0, 0, w, h, radius);\n}\n\nfunction getImageDataFromCanvas(canvas, top_x, top_y, width, height) {\n  if (typeof canvas == 'string') var canvas = document.getElementById(canvas);else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement) return;\n  var context = canvas.getContext('2d');\n  var imageData;\n\n  try {\n    try {\n      imageData = context.getImageData(top_x, top_y, width, height);\n    } catch (e) {\n      throw new Error(\"unable to access local image data: \" + e);\n      return;\n    }\n  } catch (e) {\n    throw new Error(\"unable to access image data: \" + e);\n  }\n\n  return imageData;\n}\n\nfunction processCanvasRGBA(canvas, top_x, top_y, width, height, radius) {\n  if (isNaN(radius) || radius < 1) return;\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n  imageData = processImageDataRGBA(imageData, top_x, top_y, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGBA(imageData, top_x, top_y, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n  var div = radius + radius + 1;\n  var w4 = width << 2;\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i == radiusPlus1) var stackEnd = stack;\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mul_sum = mul_table[radius];\n  var shg_sum = shg_table[radius];\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa != 0) {\n        pa = 255 / pa;\n        pixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      a_in_sum += stackIn.a = pixels[p + 3];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      a_sum += a_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\nfunction processCanvasRGB(canvas, top_x, top_y, width, height, radius) {\n  if (isNaN(radius) || radius < 1) return;\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n  imageData = processImageDataRGB(imageData, top_x, top_y, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGB(imageData, top_x, top_y, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, r_out_sum, g_out_sum, b_out_sum, r_in_sum, g_in_sum, b_in_sum, pr, pg, pb, rbs;\n  var div = radius + radius + 1;\n  var w4 = width << 2;\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i == radiusPlus1) var stackEnd = stack;\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mul_sum = mul_table[radius];\n  var shg_sum = shg_table[radius];\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = r_sum * mul_sum >> shg_sum;\n      pixels[yi + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[yi + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = r_sum * mul_sum >> shg_sum;\n      pixels[p + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[p + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\nfunction BlurStack() {\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n}\n\nmodule.exports = {\n  image: processImage,\n  canvasRGBA: processCanvasRGBA,\n  canvasRGB: processCanvasRGB,\n  imageDataRGBA: processImageDataRGBA,\n  imageDataRGB: processImageDataRGB\n};"],"sourceRoot":""}