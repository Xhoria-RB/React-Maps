{"version":3,"sources":["components/AppNavbar.js","components/Footer.js","components/Main.js","components/ProvinceData.js","components/AppModal.js","components/Parcels.js","components/Maps-amchats.js","components/Login.js","components/Person.js","components/Entity.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","reactstrap_es","color","dark","expand","className","href","onClick","navbar","type","name","id","placeholder","Component","Footer","Main","_ref","children","AppNavbar_AppNavbar","ProvinceData","_this$props","data","weather","soil","in","xs","keys","map","key","capitalize","replace","AppModal","modal","refresh","window","location","reload","style","textDecoration","Parcels","submit","e","document","getElementById","value","preventDefault","alert","cleanForm","municName","municipies","filter","mun","province_id","lib","onValidSubmit","row","for","autoFocus","required","defaultValue","index","form","md","label","helpMessage","multiple","check","sm","size","offset","AppModal_AppModal","MapsAmchats","provinceName","provinceID","provinceWeather","provinceSoil","provinceAgrop","_provinceData","isData","renderData","_this2","am4core","am4themes_dark","am4themes_animated","am4maps","geodata","am4geodata_rd","projection","Miller","polygonSeries","useGeodata","series","push","provincias","polygonTemplate","mapPolygons","template","tooltipText","fill","events","on","getProvinceData","states","create","properties","exporting","menu","event","prevState","objectSpread","get","_this3","arguments","length","undefined","ProvinceData_ProvinceData","Parcels_Parcels","chart","dispose","width","height","btnColor","Login","isHidden","redirect","onSubmit","user","password","hidden","onFocus","htmlFor","Link","to","Person","picker","datePicker","Entity","valid","comName","comRNC","mainAdd","postalCode","clearForm","Register","isPerson","btnChangeColor","Person_Person","Entity_Entity","App","BrowserRouter","components_Main","Route","exact","strict","path","component","Map_AM","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ef7c688.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarBrand, Nav, NavItem, NavLink, Container, NavbarToggler, Input } from 'reactstrap';\n\nexport default class AppNavbar extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isOpen : false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen : !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color='dark' dark expand='sm' className='mb-5'>\n          <Container>\n            <NavbarBrand href='/'>React Maps</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                <NavItem>\n                  <NavLink href='/login'>Sign In</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href='/register'>Sign Up</NavLink>\n                </NavItem>\n                <NavItem>\n                  <Input type='search' name='search' id='searchInput' placeholder='Search' />\n                </NavItem>\n                <NavItem>\n                  <NavLink href='https://github.com/Xhoria-RB'>Github</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nexport default function Footer() {\n  return (\n    <Container className='footer'>\n      <h5>\n        Made by{' '}\n        <span>\n          <strong>Ricardo Bibieca</strong>\n        </span>\n      </h5>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Navbar from './AppNavbar';\nimport { Container } from 'reactstrap';\nimport Footer from './Footer';\n\nconst Main = ({ children }) => {\n  return (\n    <div>\n      <Navbar />\n      <Container>{children}</Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { capitalize } from 'lodash';\nimport { Fade, Container, Row, Col, ListGroup, ListGroupItem, ListGroupItemHeading } from 'reactstrap';\n\nexport default class ProvinceData extends Component {\n  render() {\n    const { name, data, weather, soil } = this.props;\n\n    return (\n      <Container>\n        <Fade in='true'>\n          <h1>\n            <strong> {name} </strong>\n          </h1>\n\n          <Row>\n            <Col xs='3' className='provinceData'>\n              <ListGroup>\n                <ListGroupItemHeading>Soil</ListGroupItemHeading>\n                {Object.keys(soil).map((key) => (\n                  <ListGroupItem key={key}>\n                    <strong>{capitalize(key).replace('_', ' ') + ': '}</strong>\n                    {soil[key]}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n            </Col>\n\n            <Col xs='3' className='provinceData'>\n              <ListGroup>\n                <ListGroupItemHeading>Production</ListGroupItemHeading>\n                {/* Here I need to put the data */}\n                {Object.keys(data).map((key) => (\n                  // key is the property in the data object and data[key] will be the content\n                  <ListGroupItem key={key}>\n                    <strong>{capitalize(key).replace('_', ' ') + ': '}</strong>\n                    {data[key]}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n            </Col>\n\n            <Col xs='3' className='provinceData'>\n              <ListGroup>\n                <ListGroupItemHeading>Weather</ListGroupItemHeading>\n\n                {Object.keys(weather).map((key) => (\n                  <ListGroupItem key={key}>\n                    <strong>{capitalize(key).replace('_', ' ') + ': '}</strong>\n                    {weather[key]}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n            </Col>\n          </Row>\n        </Fade>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class AppModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal : this.props.modal\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.refresh = this.refresh.bind(this);\n  }\n\n  refresh() {\n    this.toggle();\n    window.location.reload();\n  }\n\n  toggle() {\n    this.setState({\n      modal : !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Thanks for submiting your request</ModalHeader>\n          <ModalBody>\n            Your request will be reviewed and if approved we'll contact you via email. Stay aware that your parcel will{' '}\n            <span>\n              <strong>only be displayed</strong>\n            </span>{' '}\n            on React-Maps{' '}\n            <span>\n              <strong>24hs</strong>\n            </span>{' '}\n            after{' '}\n            <span>\n              <strong style={{ textDecoration: 'underline' }}>approval</strong>\n            </span>. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\n            dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n            deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color='primary' onClick={this.refresh}>\n              Continue\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport municipies from './municipies.json';\nimport { capitalize } from 'lodash';\nimport { Container, Row, Col, Label, FormGroup, Input, Button, Fade } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvFeedback, AvField } from 'availity-reactstrap-validation';\nimport AppModal from './AppModal';\n\nexport default class Parcels extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal : false\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(e) {\n    const DNI = document.getElementById('propietaryDNI').value;\n    if (DNI === '1234567890') {\n      if (document.getElementById('municipieSelect').value !== 'SD') {\n        this.setState({\n          modal : true\n        });\n      }\n    } else {\n      e.preventDefault();\n      alert('Not a valid DNI');\n      this.cleanForm();\n    }\n  }\n  cleanForm() {\n    document.getElementById('latitude').value = '';\n    document.getElementById('longitude').value = '';\n    document.getElementById('propietaryName').value = '';\n    document.getElementById('propietaryDNI').value = '';\n    document.getElementById('parcelLenght').value = '';\n    document.getElementById('zip').value = '';\n  }\n  render() {\n    const { id } = this.props;\n    const municName = municipies.filter((mun) => mun.province_id === id);\n    return (\n      <div>\n        <Container id='personContainer'>\n          <Fade in='true'>\n            <h2 className='text-center'>Request a register for your parcel</h2>\n            <hr />\n            <AvForm id='parcelsForm' onValidSubmit={this.submit}>\n              <h5>\n                <strong style={{ textDecoration: 'underline' }}>Instrucctions:</strong>\n              </h5>\n              <ol>\n                <li>First select a province from map</li>\n                <li>Second select a municipie from select</li>\n                <li>Third fill all other inputs</li>\n              </ol>\n              <FormGroup row>\n                <Col xs='6'>\n                  <AvGroup>\n                    <Label for='latitude'>Coords</Label>\n                    <AvInput\n                      type='text'\n                      className='test'\n                      name='latitude'\n                      id='latitude'\n                      placeholder='Latitude'\n                      autoFocus\n                      required\n                    />\n                    <AvInput\n                      type='text'\n                      className='test'\n                      name='longitude'\n                      id='longitude'\n                      placeholder='Longitude'\n                      required\n                    />\n                    <AvFeedback>Must fill the coords</AvFeedback>\n                  </AvGroup>\n                </Col>\n                <Col xs='6'>\n                  <Label for='municipieSelect'>Select</Label>\n                  <Input type='select' name='select' id='municipieSelect' defaultValue='SD' required>\n                    {municName.map((name, index) => <option key={index}>{capitalize(name.municipies)}</option>)}\n                  </Input>\n                </Col>\n              </FormGroup>\n              <Row form>\n                <Col md={6}>\n                  <AvGroup>\n                    <Label for='propietaryName'>Propietary name</Label>\n                    <AvInput\n                      type='text'\n                      name='propietaryName'\n                      id='propietaryName'\n                      placeholder='Something .inc'\n                      required\n                    />\n                    <AvFeedback>Must enter a name</AvFeedback>\n                  </AvGroup>\n                </Col>\n                <Col md={6}>\n                  <AvGroup>\n                    <Label for='propietaryDNI'>Propietary DNI or RNC </Label>\n                    <AvInput type='text' name='propietaryDNI' id='propietaryDNI' placeholder='############' required />\n                    <AvFeedback>Must fill with the DNI or RNC</AvFeedback>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row form>\n                <Col md={6}>\n                  <AvGroup>\n                    <AvField\n                      type='select'\n                      name='select-multiple'\n                      label='Soil type'\n                      helpMessage='Select one or multiple (ctrl pressed)'\n                      multiple\n                      required>\n                      <option>I</option>\n                      <option>II</option>\n                      <option>III</option>\n                      <option>IV</option>\n                      <option>V</option>\n                      <option>VI</option>\n                      <option>VII</option>\n                      <option>VIII</option>\n                    </AvField>\n                    <AvFeedback>Must select at least one</AvFeedback>\n                  </AvGroup>\n                </Col>\n                <Col md={4}>\n                  <AvGroup>\n                    <Label for='parcelLenght'>Parcel lenght (in meters)</Label>\n                    <AvInput type='text' name='parcelLenght' id='parcelLenght' required />\n                    <AvFeedback>Must enter a quantity</AvFeedback>\n                  </AvGroup>\n                </Col>\n                <Col md={2}>\n                  <AvGroup>\n                    <Label for='zip'>Zip code</Label>\n                    <AvInput type='text' name='zip' id='zip' required />\n                    <AvFeedback>Must enter a zip code</AvFeedback>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <AvGroup check row>\n                <Col sm={{ size: 10, offset: 1 }}>\n                  <Button className='btn btn-large btn-block my-2'>Submit</Button>\n                  {this.state.modal ? <AppModal modal={this.state.modal} /> : ''}\n                </Col>\n              </AvGroup>\n            </AvForm>\n          </Fade>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { get } from 'lodash';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_rd from '@amcharts/amcharts4-geodata/dominicanRepublicLow';\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nimport data from './data.json';\n\nimport ProvinceData from './ProvinceData';\nimport Parcels from './Parcels.js';\n\nexport default class MapsAmchats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      provinceName    : '',\n      provinceID      : '',\n      provinceWeather : {},\n      provinceSoil    : {},\n      provinceAgrop   : {},\n      _provinceData   : {},\n      isData          : true\n    };\n    this.toggle = this.toggle.bind(this);\n    this.renderData = this.renderData.bind(this);\n  }\n\n  componentDidMount() {\n    am4core.useTheme(am4themes_dark);\n    am4core.useTheme(am4themes_animated);\n\n    let map = am4core.create('chartdiv', am4maps.MapChart);\n    map.geodata = am4geodata_rd;\n    map.projection = new am4maps.projections.Miller();\n\n    let polygonSeries = new am4maps.MapPolygonSeries();\n    polygonSeries.useGeodata = true;\n    map.series.push(polygonSeries);\n\n    polygonSeries.data = data.provincias;\n\n    // Configure series\n    let polygonTemplate = polygonSeries.mapPolygons.template;\n    // polygonTemplate.tooltipText = '{name} Agrp: {soil.use.agrp} Temperatura: {weather.main.temp}';\n    polygonTemplate.tooltipText = '{name} Temperatura: {weather.main.temp} Celcius';\n    polygonTemplate.fill = am4core.color('#757575');\n    polygonTemplate.events.on('hit', (e) => this.getProvinceData(e), this);\n\n    // Create hover state and set alternative fill color\n    let hs = polygonTemplate.states.create('hover');\n    hs.properties.fill = am4core.color('#317ef9');\n\n    map.exporting.menu = new am4core.ExportMenu();\n    this.map = map;\n  }\n\n  getProvinceData(event) {\n    this.setState((prevState) => ({\n      ...prevState,\n      _provinceData   : get(event, 'target._dataItem._dataContext.agrop_use.production', 'No data'),\n      provinceName    : get(event, 'target._dataItem._dataContext.name', 'No name'),\n      provinceSoil    : get(event, 'target._dataItem._dataContext.soil.use', 'No soil data'),\n      provinceWeather : get(event, 'target._dataItem._dataContext.weather.main', 'No weather data'),\n      provinceID      : get(event, 'target._dataItem._dataContext.id', 'No id')\n    }));\n  }\n  toggle() {\n    this.setState((prevState) => ({\n      ...prevState,\n      isData : !this.state.isData\n    }));\n  }\n\n  renderData({ _provinceData, provinceName, provinceSoil, provinceWeather, provinceID } = this.state) {\n    if (this.state.provinceID === '') {\n      return <h1>Select a province to see the data</h1>;\n    } else {\n      return this.state.isData ? (\n        <ProvinceData name={provinceName} data={_provinceData} weather={provinceWeather} soil={provinceSoil} />\n      ) : (\n        <Parcels id={provinceID} />\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    // polygonTemplate.events.on('hit', this.getProvinceData, this);\n    // {provinceName && (\n    // <ProvinceData name={provinceName} data={_provinceData} weather={provinceWeather} soil={provinceSoil} />\n    // )}\n\n    // const { _provinceData, provinceName, provinceSoil, provinceWeather, provinceID } = this.state;\n    return (\n      <Container>\n        <h1>Welcome to React-Maps</h1>\n        <p>\n          The dynamic data source of Dominican Republic. This is an final proyect from University in APEC made by\n          Ricardo Bibieca, the data displayed is not and by any means meant to be true or the forms aren't working for\n          real.{' '}\n        </p>\n        <div id='chartdiv' style={{ width: '100%', height: '500px' }} />\n        <Row>\n          <Col sm='12' md={{ size: 6, offset: 3 }}>\n            <Button className='btn btn-large btn-block my-2' color={this.state.btnColor} onClick={this.toggle}>\n              Change\n            </Button>\n          </Col>\n        </Row>\n        <Container className='my-2'>{this.renderData()}</Container>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Jumbotron, Col, Form, FormGroup, Label, Input, Button, Alert, Fade } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHidden : false,\n      redirect : false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.setState((prevState) => ({\n      ...prevState,\n      isHidden : !this.state.isHidden\n    }));\n  }\n\n  onSubmit(e) {\n    const user = document.getElementById('emailInput').value;\n    const password = document.getElementById('passwordInput').value;\n    if (user === 'juan@example.com' && password === 'abc123') {\n      this.setState((prevState) => ({\n        ...prevState,\n        redirect : true\n      }));\n    } else {\n      e.preventDefault();\n      this.toggle();\n      document.getElementById('emailInput').value = '';\n      document.getElementById('passwordInput').value = '';\n    }\n  }\n  render() {\n    return (\n      <Fade in='true'>\n        <Jumbotron>\n          <Container>\n            <h2 className='center-text'>Sign In</h2>\n            <hr />\n            <div id='errorMsg' hidden={this.state.isHidden}>\n              <Alert color='danger'>User email or password are wrong</Alert>\n            </div>\n            <Form className='form' onSubmit='return false'>\n              <Col>\n                <FormGroup>\n                  <Label>Email</Label>\n                  <Input\n                    type='email'\n                    name='email'\n                    id='emailInput'\n                    placeholder='example@example.com'\n                    onFocus={this.toggle}\n                    autoFocus\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <label htmlFor='passwordInput'>Password</label>\n                  <Input type='password' name='password' id='passwordInput' placeholder='******' />\n                </FormGroup>\n              </Col>\n              <FormGroup check row>\n                <Col sm={{ size: 10, offset: 3 }}>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type='checkbox' id='rememberMe' className='checkbox mb-3' /> Remember me\n                    </Label>\n                  </FormGroup>\n                </Col>\n              </FormGroup>\n              <FormGroup>\n                <Col md='auto'>\n                  <Link href='/' to='/'>\n                    <Button className='btn btn-large btn-block' color='primary' onClick={this.onSubmit}>\n                      Submit\n                    </Button>\n                  </Link>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Container>\n        </Jumbotron>\n      </Fade>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Fade, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport 'js-datepicker/dist/datepicker.min.css';\nimport datePicker from 'js-datepicker/dist/datepicker.min.js';\n\n/**Persona\n * nombre\n * apellido\n * Cedula\n * fecha nac\n * direccion\n * tel\n * email\n * constrase;a\n * \n * Entidad\n * Nombre empresa\n * RNC\n * Direccion sede principal\n * responsable (redirect to Person)\n */\nexport default class Person extends Component {\n  componentDidMount() {\n    const picker = datePicker('#selectDay');\n    this.picker = picker;\n  }\n\n  render() {\n    return (\n      <Container id='personContainer'>\n        <Fade in='true'>\n          <h2 className='text-center'>User registration form</h2>\n          <hr />\n          <Form>\n            <FormGroup row>\n              <Col xs='4'>\n                <Label for='personName'>Name</Label>\n                <Input type='text' name='personName' id='personName' placeholder='Enter your name' required />\n              </Col>\n              <Col xs='4'>\n                <Label for='personLastName'>Last Name</Label>\n                <Input\n                  type='text'\n                  name='personLastName'\n                  id='personLastName'\n                  placeholder='Enter your last name'\n                  required\n                />\n              </Col>\n              <Col xs='4'>\n                <Label for='personDNI'>DNI</Label>\n                <Input type='text' name='personDNI' id='personDNI' placeholder='###-#######-#' required />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Col xs='3'>\n                <Label for='selectDay'>Birthday date</Label>\n                <Input type='text' name='selectDay' id='selectDay' placeholder='Click to select' required />\n              </Col>\n              <Col xs='9'>\n                <Label for='address'>Address</Label>\n                <Input type='text' name='address' id='address' placeholder='Enter your address' required />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col xs='6'>\n                <Label for='phoneNumber'>Phone number</Label>\n                <Input type='text' name='phoneNumber' id='phoneNumber' placeholder='000-000-0000' required />\n              </Col>\n              <Col xs='6'>\n                <Label for='phoneNumber2'>Second phone number</Label>\n                <Input type='text' name='phoneNumber2' id='phoneNumber2' placeholder='000-000-0000' />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label for='email' sm={2}>\n                Email\n              </Label>\n              <Col sm={10}>\n                <Input type='email' name='email' id='email' placeholder='Enter your email' required />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for='password' sm={2}>\n                Password\n              </Label>\n              <Col sm={10}>\n                <Input type='password' name='password' id='password' placeholder='Enter your password' required />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for='confirmPassword' sm={2}>\n                Confirm password\n              </Label>\n              <Col sm={10}>\n                <Input\n                  type='password'\n                  name='confirmPassword'\n                  id='confirmPassword'\n                  placeholder='Re-enter your password'\n                  required\n                />\n              </Col>\n            </FormGroup>\n            <br />\n            <FormGroup check row>\n              <Col sm={{ size: 10, offset: 1 }}>\n                <Button className='btn btn-large btn-block my-2'>Submit</Button>\n              </Col>\n            </FormGroup>\n          </Form>\n        </Fade>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, Fade } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class Entity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      valid : false\n    };\n    this.submit = this.submit.bind(this);\n  }\n  submit(e) {\n    const comName = document.getElementById('entityName').value;\n    const comRNC = document.getElementById('companyRNC').value;\n    const mainAdd = document.getElementById('mainAddress').value;\n    const postalCode = document.getElementById('postalcode').value;\n    if (comName !== '' && comRNC !== '') {\n      if (mainAdd !== '' && postalCode !== '') {\n        if (comRNC === '1234567890') {\n          this.setState({ valid: true });\n        }\n      }\n    } else {\n      e.preventDefault();\n      this.clearForm();\n    }\n  }\n\n  clearForm() {\n    document.getElementById('entityName').value = '';\n    document.getElementById('companyRNC').value = '';\n    document.getElementById('mainAddress').value = '';\n    document.getElementById('mainAddress').value = '';\n    document.getElementById('additionalAddress').value = '';\n    document.getElementById('city').value = '';\n    document.getElementById('state').value = '';\n    document.getElementById('postalcode').value = '';\n  }\n\n  render() {\n    return (\n      <Container id='personContainer'>\n        <Fade in='true'>\n          <h2 className='text-center'>Entity registration form</h2>\n          <hr />\n          <Form onSubmit={this.submit}>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for='entityName'>Company name</Label>\n                  <Input type='text' name='entityName' id='entityName' placeholder='Something .inc' required />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for='companyRNC'>Company RNC</Label>\n                  <Input type='text' name='companyRNC' id='companyRNC' placeholder='############' required />\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Label for='mainAddress'>Main headquarters address</Label>\n              <Input type='text' name='mainAddress' id='mainAddress' placeholder='1234 Main St' required />\n            </FormGroup>\n            <FormGroup>\n              <Label for='additionalAddress'>Additional address</Label>\n              <Input\n                type='text'\n                name='additionalAddress'\n                id='additionalAddress'\n                placeholder='Apartment, studio, or floor'\n              />\n            </FormGroup>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for='city'>City</Label>\n                  <Input type='text' name='city' id='city' required />\n                </FormGroup>\n              </Col>\n              <Col md={4}>\n                <FormGroup>\n                  <Label for='state'>State</Label>\n                  <Input type='text' name='state' id='state' required />\n                </FormGroup>\n              </Col>\n              <Col md={2}>\n                <FormGroup>\n                  <Label for='postalcode'>Postal code</Label>\n                  <Input type='text' name='postalcode' id='postalcode' required />\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup check row>\n              <Col sm={{ size: 10, offset: 1 }}>\n                <Link href='/person' to='/person'>\n                  <Button className='btn btn-large btn-block my-2' onClick={this.submit}>\n                    Register responsible\n                  </Button>\n                </Link>\n              </Col>\n            </FormGroup>\n          </Form>\n        </Fade>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Fade } from 'reactstrap';\nimport Person from './Person';\nimport Entity from './Entity';\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPerson : true,\n      btnColor : 'primary'\n    };\n    this.toggle = this.toggle.bind(this);\n    this.btnChangeColor = this.btnChangeColor.bind(this);\n  }\n  toggle() {\n    this.setState({\n      isPerson : !this.state.isPerson,\n      btnColor : this.btnChangeColor(this.state.btnColor)\n    });\n  }\n  btnChangeColor(color) {\n    if (color === 'primary') {\n      return 'success';\n    } else {\n      return 'primary';\n    }\n  }\n\n  render() {\n    return (\n      <Container className='register-form'>\n        <Fade in='true'>\n          <Row>\n            <Col sm='12' md={{ size: 6, offset: 3 }}>\n              <Button className='btn btn-large btn-block' color={this.state.btnColor} onClick={this.toggle}>\n                Change\n              </Button>\n            </Col>\n          </Row>\n\n          <Container className='my-2'>{this.state.isPerson ? <Person /> : <Entity />}</Container>\n        </Fade>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Main from './components/Main';\nimport Map_AM from './components/Maps-amchats';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Person from './components/Person';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Router>\n        <Main>\n          <Route exact strict path='/' component={Map_AM} />\n          <Route exact strict path='/login' component={Login} />\n          <Route exact strict path='/register' component={Register} />\n          <Route exact strict path='/person' component={Person} />\n        </Main>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}